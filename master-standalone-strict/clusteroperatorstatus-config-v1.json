{
  "description": "ClusterOperatorStatus provides information about the status of the operator.",
  "type": "object",
  "properties": {
    "conditions": {
      "description": "conditions describes the state of the operator's managed and monitored components.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "ClusterOperatorStatusCondition represents the state of the operator's managed and monitored components.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "type",
          "status",
          "lastTransitionTime"
        ],
        "properties": {
          "lastTransitionTime": {
            "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "description": "message provides additional information about the current condition. This is only to be consumed by humans.  It may contain Line Feed characters (U+000A), which should be rendered as new lines.",
            "type": [
              "string",
              "null"
            ]
          },
          "reason": {
            "description": "reason is the CamelCase reason for the condition's current status.",
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "description": "status of the condition, one of True, False, Unknown.",
            "type": "string",
            "default": ""
          },
          "type": {
            "description": "type specifies the aspect reported by this condition.",
            "type": "string",
            "default": ""
          }
        },
        "additionalProperties": false
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
    },
    "extension": {
      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
      "type": [
        "object",
        "null"
      ]
    },
    "relatedObjects": {
      "description": "relatedObjects is a list of objects that are \"interesting\" or related to this operator.  Common uses are: 1. the detailed resource driving the operator 2. operator namespaces 3. operand namespaces",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "group",
          "resource",
          "name"
        ],
        "properties": {
          "group": {
            "description": "group of the referent.",
            "type": "string",
            "default": ""
          },
          "name": {
            "description": "name of the referent.",
            "type": "string",
            "default": ""
          },
          "namespace": {
            "description": "namespace of the referent.",
            "type": [
              "string",
              "null"
            ]
          },
          "resource": {
            "description": "resource of the referent.",
            "type": "string",
            "default": ""
          }
        },
        "additionalProperties": false
      }
    },
    "versions": {
      "description": "versions is a slice of operator and operand version tuples.  Operators which manage multiple operands will have multiple operand entries in the array.  Available operators must report the version of the operator itself with the name \"operator\". An operator reports a new \"operator\" version when it has rolled out the new version to all of its operands.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "object",
          "null"
        ],
        "required": [
          "name",
          "version"
        ],
        "properties": {
          "name": {
            "description": "name is the name of the particular operand this version is for.  It usually matches container images, not operators.",
            "type": "string",
            "default": ""
          },
          "version": {
            "description": "version indicates which version of a particular operand is currently being managed.  It must always match the Available operand.  If 1.0.0 is Available, then this must indicate 1.0.0 even if the operator is trying to rollout 1.1.0",
            "type": "string",
            "default": ""
          }
        },
        "additionalProperties": false
      }
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}