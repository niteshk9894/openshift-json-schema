{
  "description": "LDAPSyncConfig holds the necessary configuration options to define an LDAP group sync\n\nCompatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.",
  "type": "object",
  "required": [
    "url",
    "bindDN",
    "bindPassword",
    "insecure",
    "ca",
    "groupUIDNameMapping"
  ],
  "properties": {
    "activeDirectory": {
      "description": "ActiveDirectoryConfig holds the necessary configuration options to define how an LDAP group sync interacts with an LDAP server using the Active Directory schema",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "usersQuery",
        "userNameAttributes",
        "groupMembershipAttributes"
      ],
      "properties": {
        "groupMembershipAttributes": {
          "description": "GroupMembershipAttributes defines which attributes on an LDAP user entry will be interpreted as the groups it is a member of",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "userNameAttributes": {
          "description": "UserNameAttributes defines which attributes on an LDAP user entry will be interpreted as its OpenShift user name.",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "usersQuery": {
          "description": "LDAPQuery holds the options necessary to build an LDAP query",
          "type": "object",
          "required": [
            "baseDN",
            "scope",
            "derefAliases",
            "timeout",
            "filter",
            "pageSize"
          ],
          "properties": {
            "baseDN": {
              "description": "The DN of the branch of the directory where all searches should start from",
              "type": "string",
              "default": ""
            },
            "derefAliases": {
              "description": "The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set",
              "type": "string",
              "default": ""
            },
            "filter": {
              "description": "Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN",
              "type": "string",
              "default": ""
            },
            "pageSize": {
              "description": "PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.",
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "scope": {
              "description": "The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set",
              "type": "string",
              "default": ""
            },
            "timeout": {
              "description": "TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed",
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "augmentedActiveDirectory": {
      "description": "AugmentedActiveDirectoryConfig holds the necessary configuration options to define how an LDAP group sync interacts with an LDAP server using the augmented Active Directory schema",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "usersQuery",
        "userNameAttributes",
        "groupMembershipAttributes",
        "groupsQuery",
        "groupUIDAttribute",
        "groupNameAttributes"
      ],
      "properties": {
        "groupMembershipAttributes": {
          "description": "GroupMembershipAttributes defines which attributes on an LDAP user entry will be interpreted as the groups it is a member of",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "groupNameAttributes": {
          "description": "GroupNameAttributes defines which attributes on an LDAP group entry will be interpreted as its name to use for an OpenShift group",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "groupUIDAttribute": {
          "description": "GroupUIDAttributes defines which attribute on an LDAP group entry will be interpreted as its unique identifier. (ldapGroupUID)",
          "type": "string",
          "default": ""
        },
        "groupsQuery": {
          "description": "LDAPQuery holds the options necessary to build an LDAP query",
          "type": "object",
          "required": [
            "baseDN",
            "scope",
            "derefAliases",
            "timeout",
            "filter",
            "pageSize"
          ],
          "properties": {
            "baseDN": {
              "description": "The DN of the branch of the directory where all searches should start from",
              "type": "string",
              "default": ""
            },
            "derefAliases": {
              "description": "The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set",
              "type": "string",
              "default": ""
            },
            "filter": {
              "description": "Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN",
              "type": "string",
              "default": ""
            },
            "pageSize": {
              "description": "PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.",
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "scope": {
              "description": "The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set",
              "type": "string",
              "default": ""
            },
            "timeout": {
              "description": "TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed",
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          "additionalProperties": false
        },
        "userNameAttributes": {
          "description": "UserNameAttributes defines which attributes on an LDAP user entry will be interpreted as its OpenShift user name.",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "usersQuery": {
          "description": "LDAPQuery holds the options necessary to build an LDAP query",
          "type": "object",
          "required": [
            "baseDN",
            "scope",
            "derefAliases",
            "timeout",
            "filter",
            "pageSize"
          ],
          "properties": {
            "baseDN": {
              "description": "The DN of the branch of the directory where all searches should start from",
              "type": "string",
              "default": ""
            },
            "derefAliases": {
              "description": "The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set",
              "type": "string",
              "default": ""
            },
            "filter": {
              "description": "Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN",
              "type": "string",
              "default": ""
            },
            "pageSize": {
              "description": "PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.",
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "scope": {
              "description": "The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set",
              "type": "string",
              "default": ""
            },
            "timeout": {
              "description": "TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed",
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "bindDN": {
      "description": "BindDN is an optional DN to bind to the LDAP server with",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "bindPassword": {
      "description": "StringSource allows specifying a string inline, or externally via env var or file. When it contains only a string value, it marshals to a simple JSON string.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "value",
        "env",
        "file",
        "keyFile"
      ],
      "properties": {
        "env": {
          "description": "Env specifies an envvar containing the cleartext value, or an encrypted value if the keyFile is specified.",
          "type": "string",
          "default": ""
        },
        "file": {
          "description": "File references a file containing the cleartext value, or an encrypted value if a keyFile is specified.",
          "type": "string",
          "default": ""
        },
        "keyFile": {
          "description": "KeyFile references a file containing the key to use to decrypt the value.",
          "type": "string",
          "default": ""
        },
        "value": {
          "description": "Value specifies the cleartext value, or an encrypted value if keyFile is specified.",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "ca": {
      "description": "CA is the optional trusted certificate authority bundle to use when making requests to the server If empty, the default system roots are used",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "groupUIDNameMapping": {
      "description": "LDAPGroupUIDToOpenShiftGroupNameMapping is an optional direct mapping of LDAP group UIDs to OpenShift Group names",
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "insecure": {
      "description": "Insecure, if true, indicates the connection should not use TLS. Cannot be set to true with a URL scheme of \"ldaps://\" If false, \"ldaps://\" URLs connect using TLS, and \"ldap://\" URLs are upgraded to a TLS connection using StartTLS as specified in https://tools.ietf.org/html/rfc2830",
      "type": [
        "boolean",
        "null"
      ],
      "default": false
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ]
    },
    "rfc2307": {
      "description": "RFC2307Config holds the necessary configuration options to define how an LDAP group sync interacts with an LDAP server using the RFC2307 schema",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "groupsQuery",
        "groupUIDAttribute",
        "groupNameAttributes",
        "groupMembershipAttributes",
        "usersQuery",
        "userUIDAttribute",
        "userNameAttributes",
        "tolerateMemberNotFoundErrors",
        "tolerateMemberOutOfScopeErrors"
      ],
      "properties": {
        "groupMembershipAttributes": {
          "description": "GroupMembershipAttributes defines which attributes on an LDAP group entry will be interpreted  as its members. The values contained in those attributes must be queryable by your UserUIDAttribute",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "groupNameAttributes": {
          "description": "GroupNameAttributes defines which attributes on an LDAP group entry will be interpreted as its name to use for an OpenShift group",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "groupUIDAttribute": {
          "description": "GroupUIDAttributes defines which attribute on an LDAP group entry will be interpreted as its unique identifier. (ldapGroupUID)",
          "type": "string",
          "default": ""
        },
        "groupsQuery": {
          "description": "LDAPQuery holds the options necessary to build an LDAP query",
          "type": "object",
          "required": [
            "baseDN",
            "scope",
            "derefAliases",
            "timeout",
            "filter",
            "pageSize"
          ],
          "properties": {
            "baseDN": {
              "description": "The DN of the branch of the directory where all searches should start from",
              "type": "string",
              "default": ""
            },
            "derefAliases": {
              "description": "The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set",
              "type": "string",
              "default": ""
            },
            "filter": {
              "description": "Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN",
              "type": "string",
              "default": ""
            },
            "pageSize": {
              "description": "PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.",
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "scope": {
              "description": "The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set",
              "type": "string",
              "default": ""
            },
            "timeout": {
              "description": "TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed",
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          "additionalProperties": false
        },
        "tolerateMemberNotFoundErrors": {
          "description": "TolerateMemberNotFoundErrors determines the behavior of the LDAP sync job when missing user entries are encountered. If 'true', an LDAP query for users that doesn't find any will be tolerated and an only and error will be logged. If 'false', the LDAP sync job will fail if a query for users doesn't find any. The default value is 'false'. Misconfigured LDAP sync jobs with this flag set to 'true' can cause group membership to be removed, so it is recommended to use this flag with caution.",
          "type": "boolean",
          "default": false
        },
        "tolerateMemberOutOfScopeErrors": {
          "description": "TolerateMemberOutOfScopeErrors determines the behavior of the LDAP sync job when out-of-scope user entries are encountered. If 'true', an LDAP query for a user that falls outside of the base DN given for the all user query will be tolerated and only an error will be logged. If 'false', the LDAP sync job will fail if a user query would search outside of the base DN specified by the all user query. Misconfigured LDAP sync jobs with this flag set to 'true' can result in groups missing users, so it is recommended to use this flag with caution.",
          "type": "boolean",
          "default": false
        },
        "userNameAttributes": {
          "description": "UserNameAttributes defines which attributes on an LDAP user entry will be used, in order, as its OpenShift user name. The first attribute with a non-empty value is used. This should match your PreferredUsername setting for your LDAPPasswordIdentityProvider",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "userUIDAttribute": {
          "description": "UserUIDAttribute defines which attribute on an LDAP user entry will be interpreted as its unique identifier. It must correspond to values that will be found from the GroupMembershipAttributes",
          "type": "string",
          "default": ""
        },
        "usersQuery": {
          "description": "LDAPQuery holds the options necessary to build an LDAP query",
          "type": "object",
          "required": [
            "baseDN",
            "scope",
            "derefAliases",
            "timeout",
            "filter",
            "pageSize"
          ],
          "properties": {
            "baseDN": {
              "description": "The DN of the branch of the directory where all searches should start from",
              "type": "string",
              "default": ""
            },
            "derefAliases": {
              "description": "The (optional) behavior of the search with regards to alisases. Can be: never:  never dereference aliases, search: only dereference in searching, base:   only dereference in finding the base object, always: always dereference Defaults to always dereferencing if not set",
              "type": "string",
              "default": ""
            },
            "filter": {
              "description": "Filter is a valid LDAP search filter that retrieves all relevant entries from the LDAP server with the base DN",
              "type": "string",
              "default": ""
            },
            "pageSize": {
              "description": "PageSize is the maximum preferred page size, measured in LDAP entries. A page size of 0 means no paging will be done.",
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "scope": {
              "description": "The (optional) scope of the search. Can be: base: only the base object, one:  all object on the base level, sub:  the entire subtree Defaults to the entire subtree if not set",
              "type": "string",
              "default": ""
            },
            "timeout": {
              "description": "TimeLimit holds the limit of time in seconds that any request to the server can remain outstanding before the wait for a response is given up. If this is 0, no client-side limit is imposed",
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "url": {
      "description": "Host is the scheme, host and port of the LDAP server to connect to: scheme://host:port",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}