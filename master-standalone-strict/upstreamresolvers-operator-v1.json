{
  "description": "UpstreamResolvers defines a schema for configuring the CoreDNS forward plugin in the specific case of the default (\".\") server. It defers from ForwardPlugin in the default values it accepts: * At least one upstream should be specified. * the default policy is Sequential",
  "type": "object",
  "properties": {
    "policy": {
      "description": "Policy is used to determine the order in which upstream servers are selected for querying. Any one of the following values may be specified:\n\n* \"Random\" picks a random upstream server for each query. * \"RoundRobin\" picks upstream servers in a round-robin order, moving to the next server for each new query. * \"Sequential\" tries querying upstream servers in a sequential order until one responds, starting with the first server for each new query.\n\nThe default value is \"Sequential\"",
      "type": [
        "string",
        "null"
      ]
    },
    "transportConfig": {
      "description": "DNSTransportConfig groups related configuration parameters used for configuring forwarding to upstream resolvers that support DNS-over-TLS.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "tls": {
          "description": "DNSOverTLSConfig describes optional DNSTransportConfig fields that should be captured.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "serverName"
          ],
          "properties": {
            "caBundle": {
              "description": "ConfigMapNameReference references a config map in a specific namespace. The namespace must be specified at the point of use.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "name is the metadata.name of the referenced config map",
                  "type": "string",
                  "default": ""
                }
              },
              "additionalProperties": false
            },
            "serverName": {
              "description": "serverName is the upstream server to connect to when forwarding DNS queries. This is required when Transport is set to \"TLS\". ServerName will be validated against the DNS naming conventions in RFC 1123 and should match the TLS certificate installed in the upstream resolver(s).",
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false
        },
        "transport": {
          "description": "transport allows cluster administrators to opt-in to using a DNS-over-TLS connection between cluster DNS and an upstream resolver(s). Configuring TLS as the transport at this level without configuring a CABundle will result in the system certificates being used to verify the serving certificate of the upstream resolver(s).\n\nPossible values: \"\" (empty) - This means no explicit choice has been made and the platform chooses the default which is subject to change over time. The current default is \"Cleartext\". \"Cleartext\" - Cluster admin specified cleartext option. This results in the same functionality as an empty value but may be useful when a cluster admin wants to be more explicit about the transport, or wants to switch from \"TLS\" to \"Cleartext\" explicitly. \"TLS\" - This indicates that DNS queries should be sent over a TLS connection. If Transport is set to TLS, you MUST also set ServerName. If a port is not included with the upstream IP, port 853 will be tried by default per RFC 7858 section 3.1; https://datatracker.ietf.org/doc/html/rfc7858#section-3.1.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "x-kubernetes-unions": [
        {
          "discriminator": "transport",
          "fields-to-discriminateBy": {
            "tls": "TLS"
          }
        }
      ],
      "additionalProperties": false
    },
    "upstreams": {
      "description": "Upstreams is a list of resolvers to forward name queries for the \".\" domain. Each instance of CoreDNS performs health checking of Upstreams. When a healthy upstream returns an error during the exchange, another resolver is tried from Upstreams. The Upstreams are selected in the order specified in Policy.\n\nA maximum of 15 upstreams is allowed per ForwardPlugin. If no Upstreams are specified, /etc/resolv.conf is used by default",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "Upstream can either be of type SystemResolvConf, or of type Network.\n\n* For an Upstream of type SystemResolvConf, no further fields are necessary:\n  The upstream will be configured to use /etc/resolv.conf.\n* For an Upstream of type Network, a NetworkResolver field needs to be defined\n  with an IP address or IP:port if the upstream listens on a port other than 53.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "type"
        ],
        "properties": {
          "address": {
            "description": "Address must be defined when Type is set to Network. It will be ignored otherwise. It must be a valid ipv4 or ipv6 address.",
            "type": [
              "string",
              "null"
            ]
          },
          "port": {
            "description": "Port may be defined when Type is set to Network. It will be ignored otherwise. Port must be between 65535",
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "type": {
            "description": "Type defines whether this upstream contains an IP/IP:port resolver or the local /etc/resolv.conf. Type accepts 2 possible values: SystemResolvConf or Network.\n\n* When SystemResolvConf is used, the Upstream structure does not require any further fields to be defined:\n  /etc/resolv.conf will be used\n* When Network is used, the Upstream structure must contain at least an Address",
            "type": "string",
            "default": ""
          }
        },
        "additionalProperties": false
      }
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}