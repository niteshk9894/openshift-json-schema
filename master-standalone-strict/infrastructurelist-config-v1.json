{
  "description": "InfrastructureList is\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
  "type": "object",
  "required": [
    "metadata",
    "items"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "items": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "Infrastructure holds cluster-wide information about Infrastructure.  The canonical name is `cluster`\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": [
              "string",
              "null"
            ]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": [
              "string",
              "null"
            ]
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "default": ""
                }
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "default": ""
                },
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "default": ""
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": [
                  "string",
                  "null"
                ]
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                "type": [
                  "string",
                  "null"
                ]
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string",
                      "default": ""
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string",
                      "default": ""
                    },
                    "name": {
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "type": "string",
                      "default": ""
                    },
                    "uid": {
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type": "string",
                      "default": ""
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "selfLink": {
                "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          },
          "spec": {
            "description": "InfrastructureSpec contains settings that apply to the cluster infrastructure.",
            "type": "object",
            "properties": {
              "cloudConfig": {
                "description": "ConfigMapFileReference references a config map in a specific namespace. The namespace must be specified at the point of use.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "key": {
                    "description": "Key allows pointing to a specific key/value inside of the configmap.  This is useful for logical file references.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "default": ""
                  }
                },
                "additionalProperties": false
              },
              "platformSpec": {
                "description": "PlatformSpec holds the desired state specific to the underlying infrastructure provider of the current cluster. Since these are used at spec-level for the underlying cluster, it is supposed that only one of the spec structs is set.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "type"
                ],
                "properties": {
                  "alibabaCloud": {
                    "description": "AlibabaCloudPlatformSpec holds the desired state of the Alibaba Cloud infrastructure provider. This only includes fields that can be modified in the cluster.",
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "aws": {
                    "description": "AWSPlatformSpec holds the desired state of the Amazon Web Services infrastructure provider. This only includes fields that can be modified in the cluster.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "serviceEndpoints": {
                        "description": "serviceEndpoints list contains custom endpoints which will override default service endpoint of AWS Services. There must be only one ServiceEndpoint for a service.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "AWSServiceEndpoint store the configuration of a custom url to override existing defaults of AWS Services.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name",
                            "url"
                          ],
                          "properties": {
                            "name": {
                              "description": "name is the name of the AWS service. The list of all the service names can be found at https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html This must be provided and cannot be empty.",
                              "type": "string",
                              "default": ""
                            },
                            "url": {
                              "description": "url is fully qualified URI with scheme https, that overrides the default generated endpoint for a client. This must be provided and cannot be empty.",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "azure": {
                    "description": "AzurePlatformSpec holds the desired state of the Azure infrastructure provider. This only includes fields that can be modified in the cluster.",
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "baremetal": {
                    "description": "BareMetalPlatformSpec holds the desired state of the BareMetal infrastructure provider. This only includes fields that can be modified in the cluster.",
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "equinixMetal": {
                    "description": "EquinixMetalPlatformSpec holds the desired state of the Equinix Metal infrastructure provider. This only includes fields that can be modified in the cluster.",
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "gcp": {
                    "description": "GCPPlatformSpec holds the desired state of the Google Cloud Platform infrastructure provider. This only includes fields that can be modified in the cluster.",
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "ibmcloud": {
                    "description": "IBMCloudPlatformSpec holds the desired state of the IBMCloud infrastructure provider. This only includes fields that can be modified in the cluster.",
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "kubevirt": {
                    "description": "KubevirtPlatformSpec holds the desired state of the kubevirt infrastructure provider. This only includes fields that can be modified in the cluster.",
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "nutanix": {
                    "description": "NutanixPlatformSpec holds the desired state of the Nutanix infrastructure provider. This only includes fields that can be modified in the cluster.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "prismCentral",
                      "prismElements"
                    ],
                    "properties": {
                      "prismCentral": {
                        "description": "NutanixPrismEndpoint holds the endpoint address and port to access the Nutanix Prism Central or Element (cluster)",
                        "type": "object",
                        "required": [
                          "address",
                          "port"
                        ],
                        "properties": {
                          "address": {
                            "description": "address is the endpoint address (DNS name or IP address) of the Nutanix Prism Central or Element (cluster)",
                            "type": "string",
                            "default": ""
                          },
                          "port": {
                            "description": "port is the port number to access the Nutanix Prism Central or Element (cluster)",
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                          }
                        },
                        "additionalProperties": false
                      },
                      "prismElements": {
                        "description": "prismElements holds one or more endpoint address and port data to access the Nutanix Prism Elements (clusters) of the Nutanix Prism Central. Currently we only support one Prism Element (cluster) for an OpenShift cluster, where all the Nutanix resources (VMs, subnets, volumes, etc.) used in the OpenShift cluster are located. In the future, we may support Nutanix resources (VMs, etc.) spread over multiple Prism Elements (clusters) of the Prism Central.",
                        "type": "array",
                        "items": {
                          "description": "NutanixPrismElementEndpoint holds the name and endpoint data for a Prism Element (cluster)",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name",
                            "endpoint"
                          ],
                          "properties": {
                            "endpoint": {
                              "description": "NutanixPrismEndpoint holds the endpoint address and port to access the Nutanix Prism Central or Element (cluster)",
                              "type": "object",
                              "required": [
                                "address",
                                "port"
                              ],
                              "properties": {
                                "address": {
                                  "description": "address is the endpoint address (DNS name or IP address) of the Nutanix Prism Central or Element (cluster)",
                                  "type": "string",
                                  "default": ""
                                },
                                "port": {
                                  "description": "port is the port number to access the Nutanix Prism Central or Element (cluster)",
                                  "type": "integer",
                                  "format": "int32",
                                  "default": 0
                                }
                              },
                              "additionalProperties": false
                            },
                            "name": {
                              "description": "name is the name of the Prism Element (cluster). This value will correspond with the cluster field configured on other resources (eg Machines, PVCs, etc).",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-map-keys": [
                          "name"
                        ],
                        "x-kubernetes-list-type": "map"
                      }
                    },
                    "additionalProperties": false
                  },
                  "openstack": {
                    "description": "OpenStackPlatformSpec holds the desired state of the OpenStack infrastructure provider. This only includes fields that can be modified in the cluster.",
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "ovirt": {
                    "description": "OvirtPlatformSpec holds the desired state of the oVirt infrastructure provider. This only includes fields that can be modified in the cluster.",
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "powervs": {
                    "description": "PowerVSPlatformSpec holds the desired state of the IBM Power Systems Virtual Servers infrastructure provider. This only includes fields that can be modified in the cluster.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "serviceEndpoints": {
                        "description": "serviceEndpoints is a list of custom endpoints which will override the default service endpoints of a Power VS service.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "PowervsServiceEndpoint stores the configuration of a custom url to override existing defaults of PowerVS Services.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name",
                            "url"
                          ],
                          "properties": {
                            "name": {
                              "description": "name is the name of the Power VS service. Few of the services are IAM - https://cloud.ibm.com/apidocs/iam-identity-token-api ResourceController - https://cloud.ibm.com/apidocs/resource-controller/resource-controller Power Cloud - https://cloud.ibm.com/apidocs/power-cloud",
                              "type": "string",
                              "default": ""
                            },
                            "url": {
                              "description": "url is fully qualified URI with scheme https, that overrides the default generated endpoint for a client. This must be provided and cannot be empty.",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-map-keys": [
                          "name"
                        ],
                        "x-kubernetes-list-type": "map"
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "type is the underlying infrastructure provider for the cluster. This value controls whether infrastructure automation such as service load balancers, dynamic volume provisioning, machine creation and deletion, and other integrations are enabled. If None, no infrastructure automation is enabled. Allowed values are \"AWS\", \"Azure\", \"BareMetal\", \"GCP\", \"Libvirt\", \"OpenStack\", \"VSphere\", \"oVirt\", \"KubeVirt\", \"EquinixMetal\", \"PowerVS\", \"AlibabaCloud\", \"Nutanix\" and \"None\". Individual components may not support all platforms, and must handle unrecognized platforms as None if they do not support that platform.",
                    "type": "string",
                    "default": ""
                  },
                  "vsphere": {
                    "description": "VSpherePlatformSpec holds the desired state of the vSphere infrastructure provider. In the future the cloud provider operator, storage operator and machine operator will use these fields for configuration.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "failureDomains": {
                        "description": "failureDomains contains the definition of region, zone and the vCenter topology. If this is omitted failure domains (regions and zones) will not be used.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "VSpherePlatformFailureDomainSpec holds the region and zone failure domain and the vCenter topology of that failure domain.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name",
                            "region",
                            "zone",
                            "server",
                            "topology"
                          ],
                          "properties": {
                            "name": {
                              "description": "name defines the arbitrary but unique name of a failure domain.",
                              "type": "string",
                              "default": ""
                            },
                            "region": {
                              "description": "region defines the name of a region tag that will be attached to a vCenter datacenter. The tag category in vCenter must be named openshift-region.",
                              "type": "string",
                              "default": ""
                            },
                            "server": {
                              "description": "server is the fully-qualified domain name or the IP address of the vCenter server.",
                              "type": "string",
                              "default": ""
                            },
                            "topology": {
                              "description": "VSpherePlatformTopology holds the required and optional vCenter objects - datacenter, computeCluster, networks, datastore and resourcePool - to provision virtual machines.",
                              "type": "object",
                              "required": [
                                "datacenter",
                                "computeCluster",
                                "networks",
                                "datastore"
                              ],
                              "properties": {
                                "computeCluster": {
                                  "description": "computeCluster the absolute path of the vCenter cluster in which virtual machine will be located. The absolute path is of the form /<datacenter>/host/<cluster>. The maximum length of the path is 2048 characters.",
                                  "type": "string",
                                  "default": ""
                                },
                                "datacenter": {
                                  "description": "datacenter is the name of vCenter datacenter in which virtual machines will be located. The maximum length of the datacenter name is 80 characters.",
                                  "type": "string",
                                  "default": ""
                                },
                                "datastore": {
                                  "description": "datastore is the absolute path of the datastore in which the virtual machine is located. The absolute path is of the form /<datacenter>/datastore/<datastore> The maximum length of the path is 2048 characters.",
                                  "type": "string",
                                  "default": ""
                                },
                                "folder": {
                                  "description": "folder is the absolute path of the folder where virtual machines are located. The absolute path is of the form /<datacenter>/vm/<folder>. The maximum length of the path is 2048 characters.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "networks": {
                                  "description": "networks is the list of port group network names within this failure domain. Currently, we only support a single interface per RHCOS virtual machine. The available networks (port groups) can be listed using `govc ls 'network/*'` The single interface should be the absolute path of the form /<datacenter>/network/<portgroup>.",
                                  "type": "array",
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "default": ""
                                  }
                                },
                                "resourcePool": {
                                  "description": "resourcePool is the absolute path of the resource pool where virtual machines will be created. The absolute path is of the form /<datacenter>/host/<cluster>/Resources/<resourcepool>. The maximum length of the path is 2048 characters.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "zone": {
                              "description": "zone defines the name of a zone tag that will be attached to a vCenter cluster. The tag category in vCenter must be named openshift-zone.",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "nodeNetworking": {
                        "description": "VSpherePlatformNodeNetworking holds the external and internal node networking spec.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "external": {
                            "description": "VSpherePlatformNodeNetworkingSpec holds the network CIDR(s) and port group name for including and excluding IP ranges in the cloud provider. This would be used for example when multiple network adapters are attached to a guest to help determine which IP address the cloud config manager should use for the external and internal node networking.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "excludeNetworkSubnetCidr": {
                                "description": "excludeNetworkSubnetCidr IP addresses in subnet ranges will be excluded when selecting the IP address from the VirtualMachine's VM for use in the status.addresses fields.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "default": ""
                                }
                              },
                              "network": {
                                "description": "network VirtualMachine's VM Network names that will be used to when searching for status.addresses fields. Note that if internal.networkSubnetCIDR and external.networkSubnetCIDR are not set, then the vNIC associated to this network must only have a single IP address assigned to it. The available networks (port groups) can be listed using `govc ls 'network/*'`",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "networkSubnetCidr": {
                                "description": "networkSubnetCidr IP address on VirtualMachine's network interfaces included in the fields' CIDRs that will be used in respective status.addresses fields.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "default": ""
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "internal": {
                            "description": "VSpherePlatformNodeNetworkingSpec holds the network CIDR(s) and port group name for including and excluding IP ranges in the cloud provider. This would be used for example when multiple network adapters are attached to a guest to help determine which IP address the cloud config manager should use for the external and internal node networking.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "excludeNetworkSubnetCidr": {
                                "description": "excludeNetworkSubnetCidr IP addresses in subnet ranges will be excluded when selecting the IP address from the VirtualMachine's VM for use in the status.addresses fields.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "default": ""
                                }
                              },
                              "network": {
                                "description": "network VirtualMachine's VM Network names that will be used to when searching for status.addresses fields. Note that if internal.networkSubnetCIDR and external.networkSubnetCIDR are not set, then the vNIC associated to this network must only have a single IP address assigned to it. The available networks (port groups) can be listed using `govc ls 'network/*'`",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "networkSubnetCidr": {
                                "description": "networkSubnetCidr IP address on VirtualMachine's network interfaces included in the fields' CIDRs that will be used in respective status.addresses fields.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "default": ""
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "vcenters": {
                        "description": "vcenters holds the connection details for services to communicate with vCenter. Currently, only a single vCenter is supported.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "VSpherePlatformVCenterSpec stores the vCenter connection fields. This is used by the vSphere CCM.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "server",
                            "datacenters"
                          ],
                          "properties": {
                            "datacenters": {
                              "description": "The vCenter Datacenters in which the RHCOS vm guests are located. This field will be used by the Cloud Controller Manager. Each datacenter listed here should be used within a topology.",
                              "type": "array",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "default": ""
                              }
                            },
                            "port": {
                              "description": "port is the TCP port that will be used to communicate to the vCenter endpoint. When omitted, this means the user has no opinion and it is up to the platform to choose a sensible default, which is subject to change over time.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "server": {
                              "description": "server is the fully-qualified domain name or the IP address of the vCenter server.",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "status": {
            "description": "InfrastructureStatus describes the infrastructure the cluster is leveraging.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "infrastructureName",
              "etcdDiscoveryDomain",
              "apiServerURL",
              "apiServerInternalURI",
              "controlPlaneTopology",
              "infrastructureTopology"
            ],
            "properties": {
              "apiServerInternalURI": {
                "description": "apiServerInternalURL is a valid URI with scheme 'https', address and optionally a port (defaulting to 443).  apiServerInternalURL can be used by components like kubelets, to contact the Kubernetes API server using the infrastructure provider rather than Kubernetes networking.",
                "type": "string",
                "default": ""
              },
              "apiServerURL": {
                "description": "apiServerURL is a valid URI with scheme 'https', address and optionally a port (defaulting to 443).  apiServerURL can be used by components like the web console to tell users where to find the Kubernetes API.",
                "type": "string",
                "default": ""
              },
              "controlPlaneTopology": {
                "description": "controlPlaneTopology expresses the expectations for operands that normally run on control nodes. The default is 'HighlyAvailable', which represents the behavior operators have in a \"normal\" cluster. The 'SingleReplica' mode will be used in single-node deployments and the operators should not configure the operand for highly-available operation The 'External' mode indicates that the control plane is hosted externally to the cluster and that its components are not visible within the cluster.",
                "type": "string",
                "default": ""
              },
              "etcdDiscoveryDomain": {
                "description": "etcdDiscoveryDomain is the domain used to fetch the SRV records for discovering etcd servers and clients. For more info: https://github.com/etcd-io/etcd/blob/329be66e8b3f9e2e6af83c123ff89297e49ebd15/Documentation/op-guide/clustering.md#dns-discovery deprecated: as of 4.7, this field is no longer set or honored.  It will be removed in a future release.",
                "type": "string",
                "default": ""
              },
              "infrastructureName": {
                "description": "infrastructureName uniquely identifies a cluster with a human friendly name. Once set it should not be changed. Must be of max length 27 and must have only alphanumeric or hyphen characters.",
                "type": "string",
                "default": ""
              },
              "infrastructureTopology": {
                "description": "infrastructureTopology expresses the expectations for infrastructure services that do not run on control plane nodes, usually indicated by a node selector for a `role` value other than `master`. The default is 'HighlyAvailable', which represents the behavior operators have in a \"normal\" cluster. The 'SingleReplica' mode will be used in single-node deployments and the operators should not configure the operand for highly-available operation NOTE: External topology mode is not applicable for this field.",
                "type": "string",
                "default": ""
              },
              "platform": {
                "description": "platform is the underlying infrastructure provider for the cluster.\n\nDeprecated: Use platformStatus.type instead.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "platformStatus": {
                "description": "PlatformStatus holds the current status specific to the underlying infrastructure provider of the current cluster. Since these are used at status-level for the underlying cluster, it is supposed that only one of the status structs is set.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "type"
                ],
                "properties": {
                  "alibabaCloud": {
                    "description": "AlibabaCloudPlatformStatus holds the current status of the Alibaba Cloud infrastructure provider.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "region"
                    ],
                    "properties": {
                      "region": {
                        "description": "region specifies the region for Alibaba Cloud resources created for the cluster.",
                        "type": "string",
                        "default": ""
                      },
                      "resourceGroupID": {
                        "description": "resourceGroupID is the ID of the resource group for the cluster.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "resourceTags": {
                        "description": "resourceTags is a list of additional tags to apply to Alibaba Cloud resources created for the cluster.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "AlibabaCloudResourceTag is the set of tags to add to apply to resources.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "key",
                            "value"
                          ],
                          "properties": {
                            "key": {
                              "description": "key is the key of the tag.",
                              "type": "string",
                              "default": ""
                            },
                            "value": {
                              "description": "value is the value of the tag.",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-map-keys": [
                          "key"
                        ],
                        "x-kubernetes-list-type": "map"
                      }
                    },
                    "additionalProperties": false
                  },
                  "aws": {
                    "description": "AWSPlatformStatus holds the current status of the Amazon Web Services infrastructure provider.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "region"
                    ],
                    "properties": {
                      "region": {
                        "description": "region holds the default AWS region for new AWS resources created by the cluster.",
                        "type": "string",
                        "default": ""
                      },
                      "resourceTags": {
                        "description": "resourceTags is a list of additional tags to apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html for information on tagging AWS resources. AWS supports a maximum of 50 tags per resource. OpenShift reserves 25 tags for its use, leaving 25 tags available for the user.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "AWSResourceTag is a tag to apply to AWS resources created for the cluster.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "key",
                            "value"
                          ],
                          "properties": {
                            "key": {
                              "description": "key is the key of the tag",
                              "type": "string",
                              "default": ""
                            },
                            "value": {
                              "description": "value is the value of the tag. Some AWS service do not support empty values. Since tags are added to resources in many services, the length of the tag value must meet the requirements of all services.",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "serviceEndpoints": {
                        "description": "ServiceEndpoints list contains custom endpoints which will override default service endpoint of AWS Services. There must be only one ServiceEndpoint for a service.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "AWSServiceEndpoint store the configuration of a custom url to override existing defaults of AWS Services.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name",
                            "url"
                          ],
                          "properties": {
                            "name": {
                              "description": "name is the name of the AWS service. The list of all the service names can be found at https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html This must be provided and cannot be empty.",
                              "type": "string",
                              "default": ""
                            },
                            "url": {
                              "description": "url is fully qualified URI with scheme https, that overrides the default generated endpoint for a client. This must be provided and cannot be empty.",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "azure": {
                    "description": "AzurePlatformStatus holds the current status of the Azure infrastructure provider.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "resourceGroupName"
                    ],
                    "properties": {
                      "armEndpoint": {
                        "description": "armEndpoint specifies a URL to use for resource management in non-soverign clouds such as Azure Stack.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "cloudName": {
                        "description": "cloudName is the name of the Azure cloud environment which can be used to configure the Azure SDK with the appropriate Azure API endpoints. If empty, the value is equal to `AzurePublicCloud`.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "networkResourceGroupName": {
                        "description": "networkResourceGroupName is the Resource Group for network resources like the Virtual Network and Subnets used by the cluster. If empty, the value is same as ResourceGroupName.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "resourceGroupName": {
                        "description": "resourceGroupName is the Resource Group for new Azure resources created for the cluster.",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false
                  },
                  "baremetal": {
                    "description": "BareMetalPlatformStatus holds the current status of the BareMetal infrastructure provider. For more information about the network architecture used with the BareMetal platform type, see: https://github.com/openshift/installer/blob/master/docs/design/baremetal/networking-infrastructure.md",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "apiServerInternalIPs",
                      "ingressIPs"
                    ],
                    "properties": {
                      "apiServerInternalIP": {
                        "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.\n\nDeprecated: Use APIServerInternalIPs instead.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "apiServerInternalIPs": {
                        "description": "apiServerInternalIPs are the IP addresses to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. These are the IPs for a self-hosted load balancer in front of the API servers. In dual stack clusters this list contains two IPs otherwise only one.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "default": ""
                        }
                      },
                      "ingressIP": {
                        "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.\n\nDeprecated: Use IngressIPs instead.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "ingressIPs": {
                        "description": "ingressIPs are the external IPs which route to the default ingress controller. The IPs are suitable targets of a wildcard DNS record used to resolve default route host names. In dual stack clusters this list contains two IPs otherwise only one.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "default": ""
                        }
                      },
                      "nodeDNSIP": {
                        "description": "nodeDNSIP is the IP address for the internal DNS used by the nodes. Unlike the one managed by the DNS operator, `NodeDNSIP` provides name resolution for the nodes themselves. There is no DNS-as-a-service for BareMetal deployments. In order to minimize necessary changes to the datacenter DNS, a DNS service is hosted as a static pod to serve those hostnames to the nodes in the cluster.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "equinixMetal": {
                    "description": "EquinixMetalPlatformStatus holds the current status of the Equinix Metal infrastructure provider.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "apiServerInternalIP": {
                        "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "ingressIP": {
                        "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "gcp": {
                    "description": "GCPPlatformStatus holds the current status of the Google Cloud Platform infrastructure provider.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "projectID",
                      "region"
                    ],
                    "properties": {
                      "projectID": {
                        "description": "resourceGroupName is the Project ID for new GCP resources created for the cluster.",
                        "type": "string",
                        "default": ""
                      },
                      "region": {
                        "description": "region holds the region for new GCP resources created for the cluster.",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false
                  },
                  "ibmcloud": {
                    "description": "IBMCloudPlatformStatus holds the current status of the IBMCloud infrastructure provider.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "cisInstanceCRN": {
                        "description": "CISInstanceCRN is the CRN of the Cloud Internet Services instance managing the DNS zone for the cluster's base domain",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "dnsInstanceCRN": {
                        "description": "DNSInstanceCRN is the CRN of the DNS Services instance managing the DNS zone for the cluster's base domain",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "location": {
                        "description": "Location is where the cluster has been deployed",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "providerType": {
                        "description": "ProviderType indicates the type of cluster that was created",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "resourceGroupName": {
                        "description": "ResourceGroupName is the Resource Group for new IBMCloud resources created for the cluster.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "kubevirt": {
                    "description": "KubevirtPlatformStatus holds the current status of the kubevirt infrastructure provider.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "apiServerInternalIP": {
                        "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "ingressIP": {
                        "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "nutanix": {
                    "description": "NutanixPlatformStatus holds the current status of the Nutanix infrastructure provider.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "apiServerInternalIPs",
                      "ingressIPs"
                    ],
                    "properties": {
                      "apiServerInternalIP": {
                        "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.\n\nDeprecated: Use APIServerInternalIPs instead.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "apiServerInternalIPs": {
                        "description": "apiServerInternalIPs are the IP addresses to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. These are the IPs for a self-hosted load balancer in front of the API servers. In dual stack clusters this list contains two IPs otherwise only one.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "default": ""
                        }
                      },
                      "ingressIP": {
                        "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.\n\nDeprecated: Use IngressIPs instead.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "ingressIPs": {
                        "description": "ingressIPs are the external IPs which route to the default ingress controller. The IPs are suitable targets of a wildcard DNS record used to resolve default route host names. In dual stack clusters this list contains two IPs otherwise only one.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "default": ""
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "openstack": {
                    "description": "OpenStackPlatformStatus holds the current status of the OpenStack infrastructure provider.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "apiServerInternalIPs",
                      "ingressIPs"
                    ],
                    "properties": {
                      "apiServerInternalIP": {
                        "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.\n\nDeprecated: Use APIServerInternalIPs instead.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "apiServerInternalIPs": {
                        "description": "apiServerInternalIPs are the IP addresses to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. These are the IPs for a self-hosted load balancer in front of the API servers. In dual stack clusters this list contains two IPs otherwise only one.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "default": ""
                        }
                      },
                      "cloudName": {
                        "description": "cloudName is the name of the desired OpenStack cloud in the client configuration file (`clouds.yaml`).",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "ingressIP": {
                        "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.\n\nDeprecated: Use IngressIPs instead.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "ingressIPs": {
                        "description": "ingressIPs are the external IPs which route to the default ingress controller. The IPs are suitable targets of a wildcard DNS record used to resolve default route host names. In dual stack clusters this list contains two IPs otherwise only one.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "default": ""
                        }
                      },
                      "nodeDNSIP": {
                        "description": "nodeDNSIP is the IP address for the internal DNS used by the nodes. Unlike the one managed by the DNS operator, `NodeDNSIP` provides name resolution for the nodes themselves. There is no DNS-as-a-service for OpenStack deployments. In order to minimize necessary changes to the datacenter DNS, a DNS service is hosted as a static pod to serve those hostnames to the nodes in the cluster.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "ovirt": {
                    "description": "OvirtPlatformStatus holds the current status of the  oVirt infrastructure provider.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "apiServerInternalIPs",
                      "ingressIPs"
                    ],
                    "properties": {
                      "apiServerInternalIP": {
                        "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.\n\nDeprecated: Use APIServerInternalIPs instead.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "apiServerInternalIPs": {
                        "description": "apiServerInternalIPs are the IP addresses to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. These are the IPs for a self-hosted load balancer in front of the API servers. In dual stack clusters this list contains two IPs otherwise only one.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "default": ""
                        }
                      },
                      "ingressIP": {
                        "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.\n\nDeprecated: Use IngressIPs instead.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "ingressIPs": {
                        "description": "ingressIPs are the external IPs which route to the default ingress controller. The IPs are suitable targets of a wildcard DNS record used to resolve default route host names. In dual stack clusters this list contains two IPs otherwise only one.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "default": ""
                        }
                      },
                      "nodeDNSIP": {
                        "description": "deprecated: as of 4.6, this field is no longer set or honored.  It will be removed in a future release.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "powervs": {
                    "description": "PowerVSPlatformStatus holds the current status of the IBM Power Systems Virtual Servers infrastrucutre provider.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "region",
                      "zone"
                    ],
                    "properties": {
                      "cisInstanceCRN": {
                        "description": "CISInstanceCRN is the CRN of the Cloud Internet Services instance managing the DNS zone for the cluster's base domain",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "dnsInstanceCRN": {
                        "description": "DNSInstanceCRN is the CRN of the DNS Services instance managing the DNS zone for the cluster's base domain",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "region": {
                        "description": "region holds the default Power VS region for new Power VS resources created by the cluster.",
                        "type": "string",
                        "default": ""
                      },
                      "serviceEndpoints": {
                        "description": "serviceEndpoints is a list of custom endpoints which will override the default service endpoints of a Power VS service.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "PowervsServiceEndpoint stores the configuration of a custom url to override existing defaults of PowerVS Services.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name",
                            "url"
                          ],
                          "properties": {
                            "name": {
                              "description": "name is the name of the Power VS service. Few of the services are IAM - https://cloud.ibm.com/apidocs/iam-identity-token-api ResourceController - https://cloud.ibm.com/apidocs/resource-controller/resource-controller Power Cloud - https://cloud.ibm.com/apidocs/power-cloud",
                              "type": "string",
                              "default": ""
                            },
                            "url": {
                              "description": "url is fully qualified URI with scheme https, that overrides the default generated endpoint for a client. This must be provided and cannot be empty.",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "zone": {
                        "description": "zone holds the default zone for the new Power VS resources created by the cluster. Note: Currently only single-zone OCP clusters are supported",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "type is the underlying infrastructure provider for the cluster. This value controls whether infrastructure automation such as service load balancers, dynamic volume provisioning, machine creation and deletion, and other integrations are enabled. If None, no infrastructure automation is enabled. Allowed values are \"AWS\", \"Azure\", \"BareMetal\", \"GCP\", \"Libvirt\", \"OpenStack\", \"VSphere\", \"oVirt\", \"EquinixMetal\", \"PowerVS\", \"AlibabaCloud\", \"Nutanix\" and \"None\". Individual components may not support all platforms, and must handle unrecognized platforms as None if they do not support that platform.\n\nThis value will be synced with to the `status.platform` and `status.platformStatus.type`. Currently this value cannot be changed once set.",
                    "type": "string",
                    "default": ""
                  },
                  "vsphere": {
                    "description": "VSpherePlatformStatus holds the current status of the vSphere infrastructure provider.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "apiServerInternalIPs",
                      "ingressIPs"
                    ],
                    "properties": {
                      "apiServerInternalIP": {
                        "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.\n\nDeprecated: Use APIServerInternalIPs instead.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "apiServerInternalIPs": {
                        "description": "apiServerInternalIPs are the IP addresses to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. These are the IPs for a self-hosted load balancer in front of the API servers. In dual stack clusters this list contains two IPs otherwise only one.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "default": ""
                        }
                      },
                      "ingressIP": {
                        "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.\n\nDeprecated: Use IngressIPs instead.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "ingressIPs": {
                        "description": "ingressIPs are the external IPs which route to the default ingress controller. The IPs are suitable targets of a wildcard DNS record used to resolve default route host names. In dual stack clusters this list contains two IPs otherwise only one.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "default": ""
                        }
                      },
                      "nodeDNSIP": {
                        "description": "nodeDNSIP is the IP address for the internal DNS used by the nodes. Unlike the one managed by the DNS operator, `NodeDNSIP` provides name resolution for the nodes themselves. There is no DNS-as-a-service for vSphere deployments. In order to minimize necessary changes to the datacenter DNS, a DNS service is hosted as a static pod to serve those hostnames to the nodes in the cluster.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ]
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": [
            "string",
            "null"
          ]
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}