{
  "description": "GenericControllerConfig provides information to configure a controller",
  "type": "object",
  "required": [
    "servingInfo",
    "leaderElection",
    "authentication",
    "authorization"
  ],
  "properties": {
    "authentication": {
      "description": "DelegatedAuthentication allows authentication to be disabled.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "disabled": {
          "description": "disabled indicates that authentication should be disabled.  By default it will use delegated authentication.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "authorization": {
      "description": "DelegatedAuthorization allows authorization to be disabled.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "disabled": {
          "description": "disabled indicates that authorization should be disabled.  By default it will use delegated authorization.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "leaderElection": {
      "description": "LeaderElection provides information to elect a leader",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "leaseDuration",
        "renewDeadline",
        "retryPeriod"
      ],
      "properties": {
        "disable": {
          "description": "disable allows leader election to be suspended while allowing a fully defaulted \"normal\" startup case.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "leaseDuration": {
          "description": "Duration is a wrapper around time.Duration which supports correct marshaling to YAML and JSON. In particular, it marshals into strings, which can be used as map keys in json.",
          "type": "string"
        },
        "name": {
          "description": "name indicates what name to use for the resource",
          "type": [
            "string",
            "null"
          ]
        },
        "namespace": {
          "description": "namespace indicates which namespace the resource is in",
          "type": [
            "string",
            "null"
          ]
        },
        "renewDeadline": {
          "description": "Duration is a wrapper around time.Duration which supports correct marshaling to YAML and JSON. In particular, it marshals into strings, which can be used as map keys in json.",
          "type": "string"
        },
        "retryPeriod": {
          "description": "Duration is a wrapper around time.Duration which supports correct marshaling to YAML and JSON. In particular, it marshals into strings, which can be used as map keys in json.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "servingInfo": {
      "description": "HTTPServingInfo holds configuration for serving HTTP",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "bindAddress",
        "bindNetwork",
        "certFile",
        "keyFile",
        "maxRequestsInFlight",
        "requestTimeoutSeconds"
      ],
      "properties": {
        "bindAddress": {
          "description": "BindAddress is the ip:port to serve on",
          "type": "string",
          "default": ""
        },
        "bindNetwork": {
          "description": "BindNetwork is the type of network to bind to - defaults to \"tcp4\", accepts \"tcp\", \"tcp4\", and \"tcp6\"",
          "type": "string",
          "default": ""
        },
        "certFile": {
          "description": "CertFile is a file containing a PEM-encoded certificate",
          "type": "string",
          "default": ""
        },
        "cipherSuites": {
          "description": "CipherSuites contains an overridden list of ciphers for the server to support. Values must match cipher suite IDs from https://golang.org/pkg/crypto/tls/#pkg-constants",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "clientCA": {
          "description": "ClientCA is the certificate bundle for all the signers that you'll recognize for incoming client certificates",
          "type": [
            "string",
            "null"
          ]
        },
        "keyFile": {
          "description": "KeyFile is a file containing a PEM-encoded private key for the certificate specified by CertFile",
          "type": "string",
          "default": ""
        },
        "maxRequestsInFlight": {
          "description": "MaxRequestsInFlight is the number of concurrent requests allowed to the server. If zero, no limit.",
          "type": "integer",
          "format": "int64",
          "default": 0
        },
        "minTLSVersion": {
          "description": "MinTLSVersion is the minimum TLS version supported. Values must match version names from https://golang.org/pkg/crypto/tls/#pkg-constants",
          "type": [
            "string",
            "null"
          ]
        },
        "namedCertificates": {
          "description": "NamedCertificates is a list of certificates to use to secure requests to specific hostnames",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "NamedCertificate specifies a certificate/key, and the names it should be served for",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "certFile",
              "keyFile"
            ],
            "properties": {
              "certFile": {
                "description": "CertFile is a file containing a PEM-encoded certificate",
                "type": "string",
                "default": ""
              },
              "keyFile": {
                "description": "KeyFile is a file containing a PEM-encoded private key for the certificate specified by CertFile",
                "type": "string",
                "default": ""
              },
              "names": {
                "description": "Names is a list of DNS names this certificate should be used to secure A name can be a normal DNS name, or can contain leading wildcard segments.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "default": ""
                }
              }
            },
            "additionalProperties": false
          }
        },
        "requestTimeoutSeconds": {
          "description": "RequestTimeoutSeconds is the number of seconds before requests are timed out. The default is 60 minutes, if -1 there is no limit on requests.",
          "type": "integer",
          "format": "int64",
          "default": 0
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}