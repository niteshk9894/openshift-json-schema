{
  "type": "object",
  "properties": {
    "additionalTrustedCA": {
      "description": "ConfigMapNameReference references a config map in a specific namespace. The namespace must be specified at the point of use.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "name is the metadata.name of the referenced config map",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "allowedRegistriesForImport": {
      "description": "allowedRegistriesForImport limits the container image registries that normal users may import images from. Set this list to the registries that you trust to contain valid Docker images and that you want applications to be able to import from. Users with permission to create Images or ImageStreamMappings via the API are not affected by this policy - typically only administrators or system integrations will have those permissions.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "RegistryLocation contains a location of the registry specified by the registry domain name. The domain name might include wildcards, like '*' or '??'.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "domainName"
        ],
        "properties": {
          "domainName": {
            "description": "domainName specifies a domain name for the registry In case the registry use non-standard (80 or 443) port, the port should be included in the domain name as well.",
            "type": "string",
            "default": ""
          },
          "insecure": {
            "description": "insecure indicates whether the registry is secure (https) or insecure (http) By default (if not specified) the registry is assumed as secure.",
            "type": [
              "boolean",
              "null"
            ]
          }
        },
        "additionalProperties": false
      }
    },
    "externalRegistryHostnames": {
      "description": "externalRegistryHostnames provides the hostnames for the default external image registry. The external hostname should be set only when the image registry is exposed externally. The first value is used in 'publicDockerImageRepository' field in ImageStreams. The value must be in \"hostname[:port]\" format.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "registrySources": {
      "description": "RegistrySources holds cluster-wide information about how to handle the registries config.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "allowedRegistries": {
          "description": "allowedRegistries are the only registries permitted for image pull and push actions. All other registries are denied.\n\nOnly one of BlockedRegistries or AllowedRegistries may be set.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "blockedRegistries": {
          "description": "blockedRegistries cannot be used for image pull and push actions. All other registries are permitted.\n\nOnly one of BlockedRegistries or AllowedRegistries may be set.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "containerRuntimeSearchRegistries": {
          "description": "containerRuntimeSearchRegistries are registries that will be searched when pulling images that do not have fully qualified domains in their pull specs. Registries will be searched in the order provided in the list. Note: this search list only works with the container runtime, i.e CRI-O. Will NOT work with builds or imagestream imports.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          },
          "x-kubernetes-list-type": "set"
        },
        "insecureRegistries": {
          "description": "insecureRegistries are registries which do not have a valid TLS certificates or only support HTTP connections.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}