{
  "description": "InfrastructureStatus describes the infrastructure the cluster is leveraging.",
  "type": "object",
  "required": [
    "infrastructureName",
    "etcdDiscoveryDomain",
    "apiServerURL",
    "apiServerInternalURI",
    "controlPlaneTopology",
    "infrastructureTopology"
  ],
  "properties": {
    "apiServerInternalURI": {
      "description": "apiServerInternalURL is a valid URI with scheme 'https', address and optionally a port (defaulting to 443).  apiServerInternalURL can be used by components like kubelets, to contact the Kubernetes API server using the infrastructure provider rather than Kubernetes networking.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "apiServerURL": {
      "description": "apiServerURL is a valid URI with scheme 'https', address and optionally a port (defaulting to 443).  apiServerURL can be used by components like the web console to tell users where to find the Kubernetes API.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "controlPlaneTopology": {
      "description": "controlPlaneTopology expresses the expectations for operands that normally run on control nodes. The default is 'HighlyAvailable', which represents the behavior operators have in a \"normal\" cluster. The 'SingleReplica' mode will be used in single-node deployments and the operators should not configure the operand for highly-available operation The 'External' mode indicates that the control plane is hosted externally to the cluster and that its components are not visible within the cluster.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "etcdDiscoveryDomain": {
      "description": "etcdDiscoveryDomain is the domain used to fetch the SRV records for discovering etcd servers and clients. For more info: https://github.com/etcd-io/etcd/blob/329be66e8b3f9e2e6af83c123ff89297e49ebd15/Documentation/op-guide/clustering.md#dns-discovery deprecated: as of 4.7, this field is no longer set or honored.  It will be removed in a future release.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "infrastructureName": {
      "description": "infrastructureName uniquely identifies a cluster with a human friendly name. Once set it should not be changed. Must be of max length 27 and must have only alphanumeric or hyphen characters.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "infrastructureTopology": {
      "description": "infrastructureTopology expresses the expectations for infrastructure services that do not run on control plane nodes, usually indicated by a node selector for a `role` value other than `master`. The default is 'HighlyAvailable', which represents the behavior operators have in a \"normal\" cluster. The 'SingleReplica' mode will be used in single-node deployments and the operators should not configure the operand for highly-available operation NOTE: External topology mode is not applicable for this field.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "platform": {
      "description": "platform is the underlying infrastructure provider for the cluster.\n\nDeprecated: Use platformStatus.type instead.",
      "type": [
        "string",
        "null"
      ]
    },
    "platformStatus": {
      "description": "PlatformStatus holds the current status specific to the underlying infrastructure provider of the current cluster. Since these are used at status-level for the underlying cluster, it is supposed that only one of the status structs is set.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "type"
      ],
      "properties": {
        "alibabaCloud": {
          "description": "AlibabaCloudPlatformStatus holds the current status of the Alibaba Cloud infrastructure provider.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "region"
          ],
          "properties": {
            "region": {
              "description": "region specifies the region for Alibaba Cloud resources created for the cluster.",
              "type": "string",
              "default": ""
            },
            "resourceGroupID": {
              "description": "resourceGroupID is the ID of the resource group for the cluster.",
              "type": [
                "string",
                "null"
              ]
            },
            "resourceTags": {
              "description": "resourceTags is a list of additional tags to apply to Alibaba Cloud resources created for the cluster.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "AlibabaCloudResourceTag is the set of tags to add to apply to resources.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "description": "key is the key of the tag.",
                    "type": "string",
                    "default": ""
                  },
                  "value": {
                    "description": "value is the value of the tag.",
                    "type": "string",
                    "default": ""
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-map-keys": [
                "key"
              ],
              "x-kubernetes-list-type": "map"
            }
          },
          "additionalProperties": false
        },
        "aws": {
          "description": "AWSPlatformStatus holds the current status of the Amazon Web Services infrastructure provider.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "region"
          ],
          "properties": {
            "region": {
              "description": "region holds the default AWS region for new AWS resources created by the cluster.",
              "type": "string",
              "default": ""
            },
            "resourceTags": {
              "description": "resourceTags is a list of additional tags to apply to AWS resources created for the cluster. See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html for information on tagging AWS resources. AWS supports a maximum of 50 tags per resource. OpenShift reserves 25 tags for its use, leaving 25 tags available for the user.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "AWSResourceTag is a tag to apply to AWS resources created for the cluster.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "description": "key is the key of the tag",
                    "type": "string",
                    "default": ""
                  },
                  "value": {
                    "description": "value is the value of the tag. Some AWS service do not support empty values. Since tags are added to resources in many services, the length of the tag value must meet the requirements of all services.",
                    "type": "string",
                    "default": ""
                  }
                },
                "additionalProperties": false
              }
            },
            "serviceEndpoints": {
              "description": "ServiceEndpoints list contains custom endpoints which will override default service endpoint of AWS Services. There must be only one ServiceEndpoint for a service.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "AWSServiceEndpoint store the configuration of a custom url to override existing defaults of AWS Services.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name",
                  "url"
                ],
                "properties": {
                  "name": {
                    "description": "name is the name of the AWS service. The list of all the service names can be found at https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html This must be provided and cannot be empty.",
                    "type": "string",
                    "default": ""
                  },
                  "url": {
                    "description": "url is fully qualified URI with scheme https, that overrides the default generated endpoint for a client. This must be provided and cannot be empty.",
                    "type": "string",
                    "default": ""
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "azure": {
          "description": "AzurePlatformStatus holds the current status of the Azure infrastructure provider.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "resourceGroupName"
          ],
          "properties": {
            "armEndpoint": {
              "description": "armEndpoint specifies a URL to use for resource management in non-soverign clouds such as Azure Stack.",
              "type": [
                "string",
                "null"
              ]
            },
            "cloudName": {
              "description": "cloudName is the name of the Azure cloud environment which can be used to configure the Azure SDK with the appropriate Azure API endpoints. If empty, the value is equal to `AzurePublicCloud`.",
              "type": [
                "string",
                "null"
              ]
            },
            "networkResourceGroupName": {
              "description": "networkResourceGroupName is the Resource Group for network resources like the Virtual Network and Subnets used by the cluster. If empty, the value is same as ResourceGroupName.",
              "type": [
                "string",
                "null"
              ]
            },
            "resourceGroupName": {
              "description": "resourceGroupName is the Resource Group for new Azure resources created for the cluster.",
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false
        },
        "baremetal": {
          "description": "BareMetalPlatformStatus holds the current status of the BareMetal infrastructure provider. For more information about the network architecture used with the BareMetal platform type, see: https://github.com/openshift/installer/blob/master/docs/design/baremetal/networking-infrastructure.md",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "apiServerInternalIPs",
            "ingressIPs"
          ],
          "properties": {
            "apiServerInternalIP": {
              "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.\n\nDeprecated: Use APIServerInternalIPs instead.",
              "type": [
                "string",
                "null"
              ]
            },
            "apiServerInternalIPs": {
              "description": "apiServerInternalIPs are the IP addresses to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. These are the IPs for a self-hosted load balancer in front of the API servers. In dual stack clusters this list contains two IPs otherwise only one.",
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "ingressIP": {
              "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.\n\nDeprecated: Use IngressIPs instead.",
              "type": [
                "string",
                "null"
              ]
            },
            "ingressIPs": {
              "description": "ingressIPs are the external IPs which route to the default ingress controller. The IPs are suitable targets of a wildcard DNS record used to resolve default route host names. In dual stack clusters this list contains two IPs otherwise only one.",
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "nodeDNSIP": {
              "description": "nodeDNSIP is the IP address for the internal DNS used by the nodes. Unlike the one managed by the DNS operator, `NodeDNSIP` provides name resolution for the nodes themselves. There is no DNS-as-a-service for BareMetal deployments. In order to minimize necessary changes to the datacenter DNS, a DNS service is hosted as a static pod to serve those hostnames to the nodes in the cluster.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "equinixMetal": {
          "description": "EquinixMetalPlatformStatus holds the current status of the Equinix Metal infrastructure provider.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "apiServerInternalIP": {
              "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.",
              "type": [
                "string",
                "null"
              ]
            },
            "ingressIP": {
              "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "gcp": {
          "description": "GCPPlatformStatus holds the current status of the Google Cloud Platform infrastructure provider.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "projectID",
            "region"
          ],
          "properties": {
            "projectID": {
              "description": "resourceGroupName is the Project ID for new GCP resources created for the cluster.",
              "type": "string",
              "default": ""
            },
            "region": {
              "description": "region holds the region for new GCP resources created for the cluster.",
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false
        },
        "ibmcloud": {
          "description": "IBMCloudPlatformStatus holds the current status of the IBMCloud infrastructure provider.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "cisInstanceCRN": {
              "description": "CISInstanceCRN is the CRN of the Cloud Internet Services instance managing the DNS zone for the cluster's base domain",
              "type": [
                "string",
                "null"
              ]
            },
            "dnsInstanceCRN": {
              "description": "DNSInstanceCRN is the CRN of the DNS Services instance managing the DNS zone for the cluster's base domain",
              "type": [
                "string",
                "null"
              ]
            },
            "location": {
              "description": "Location is where the cluster has been deployed",
              "type": [
                "string",
                "null"
              ]
            },
            "providerType": {
              "description": "ProviderType indicates the type of cluster that was created",
              "type": [
                "string",
                "null"
              ]
            },
            "resourceGroupName": {
              "description": "ResourceGroupName is the Resource Group for new IBMCloud resources created for the cluster.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "kubevirt": {
          "description": "KubevirtPlatformStatus holds the current status of the kubevirt infrastructure provider.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "apiServerInternalIP": {
              "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.",
              "type": [
                "string",
                "null"
              ]
            },
            "ingressIP": {
              "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "nutanix": {
          "description": "NutanixPlatformStatus holds the current status of the Nutanix infrastructure provider.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "apiServerInternalIPs",
            "ingressIPs"
          ],
          "properties": {
            "apiServerInternalIP": {
              "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.\n\nDeprecated: Use APIServerInternalIPs instead.",
              "type": [
                "string",
                "null"
              ]
            },
            "apiServerInternalIPs": {
              "description": "apiServerInternalIPs are the IP addresses to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. These are the IPs for a self-hosted load balancer in front of the API servers. In dual stack clusters this list contains two IPs otherwise only one.",
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "ingressIP": {
              "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.\n\nDeprecated: Use IngressIPs instead.",
              "type": [
                "string",
                "null"
              ]
            },
            "ingressIPs": {
              "description": "ingressIPs are the external IPs which route to the default ingress controller. The IPs are suitable targets of a wildcard DNS record used to resolve default route host names. In dual stack clusters this list contains two IPs otherwise only one.",
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            }
          },
          "additionalProperties": false
        },
        "openstack": {
          "description": "OpenStackPlatformStatus holds the current status of the OpenStack infrastructure provider.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "apiServerInternalIPs",
            "ingressIPs"
          ],
          "properties": {
            "apiServerInternalIP": {
              "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.\n\nDeprecated: Use APIServerInternalIPs instead.",
              "type": [
                "string",
                "null"
              ]
            },
            "apiServerInternalIPs": {
              "description": "apiServerInternalIPs are the IP addresses to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. These are the IPs for a self-hosted load balancer in front of the API servers. In dual stack clusters this list contains two IPs otherwise only one.",
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "cloudName": {
              "description": "cloudName is the name of the desired OpenStack cloud in the client configuration file (`clouds.yaml`).",
              "type": [
                "string",
                "null"
              ]
            },
            "ingressIP": {
              "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.\n\nDeprecated: Use IngressIPs instead.",
              "type": [
                "string",
                "null"
              ]
            },
            "ingressIPs": {
              "description": "ingressIPs are the external IPs which route to the default ingress controller. The IPs are suitable targets of a wildcard DNS record used to resolve default route host names. In dual stack clusters this list contains two IPs otherwise only one.",
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "nodeDNSIP": {
              "description": "nodeDNSIP is the IP address for the internal DNS used by the nodes. Unlike the one managed by the DNS operator, `NodeDNSIP` provides name resolution for the nodes themselves. There is no DNS-as-a-service for OpenStack deployments. In order to minimize necessary changes to the datacenter DNS, a DNS service is hosted as a static pod to serve those hostnames to the nodes in the cluster.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "ovirt": {
          "description": "OvirtPlatformStatus holds the current status of the  oVirt infrastructure provider.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "apiServerInternalIPs",
            "ingressIPs"
          ],
          "properties": {
            "apiServerInternalIP": {
              "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.\n\nDeprecated: Use APIServerInternalIPs instead.",
              "type": [
                "string",
                "null"
              ]
            },
            "apiServerInternalIPs": {
              "description": "apiServerInternalIPs are the IP addresses to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. These are the IPs for a self-hosted load balancer in front of the API servers. In dual stack clusters this list contains two IPs otherwise only one.",
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "ingressIP": {
              "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.\n\nDeprecated: Use IngressIPs instead.",
              "type": [
                "string",
                "null"
              ]
            },
            "ingressIPs": {
              "description": "ingressIPs are the external IPs which route to the default ingress controller. The IPs are suitable targets of a wildcard DNS record used to resolve default route host names. In dual stack clusters this list contains two IPs otherwise only one.",
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "nodeDNSIP": {
              "description": "deprecated: as of 4.6, this field is no longer set or honored.  It will be removed in a future release.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "powervs": {
          "description": "PowerVSPlatformStatus holds the current status of the IBM Power Systems Virtual Servers infrastrucutre provider.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "region",
            "zone"
          ],
          "properties": {
            "cisInstanceCRN": {
              "description": "CISInstanceCRN is the CRN of the Cloud Internet Services instance managing the DNS zone for the cluster's base domain",
              "type": [
                "string",
                "null"
              ]
            },
            "dnsInstanceCRN": {
              "description": "DNSInstanceCRN is the CRN of the DNS Services instance managing the DNS zone for the cluster's base domain",
              "type": [
                "string",
                "null"
              ]
            },
            "region": {
              "description": "region holds the default Power VS region for new Power VS resources created by the cluster.",
              "type": "string",
              "default": ""
            },
            "serviceEndpoints": {
              "description": "serviceEndpoints is a list of custom endpoints which will override the default service endpoints of a Power VS service.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "PowervsServiceEndpoint stores the configuration of a custom url to override existing defaults of PowerVS Services.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name",
                  "url"
                ],
                "properties": {
                  "name": {
                    "description": "name is the name of the Power VS service. Few of the services are IAM - https://cloud.ibm.com/apidocs/iam-identity-token-api ResourceController - https://cloud.ibm.com/apidocs/resource-controller/resource-controller Power Cloud - https://cloud.ibm.com/apidocs/power-cloud",
                    "type": "string",
                    "default": ""
                  },
                  "url": {
                    "description": "url is fully qualified URI with scheme https, that overrides the default generated endpoint for a client. This must be provided and cannot be empty.",
                    "type": "string",
                    "default": ""
                  }
                },
                "additionalProperties": false
              }
            },
            "zone": {
              "description": "zone holds the default zone for the new Power VS resources created by the cluster. Note: Currently only single-zone OCP clusters are supported",
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false
        },
        "type": {
          "description": "type is the underlying infrastructure provider for the cluster. This value controls whether infrastructure automation such as service load balancers, dynamic volume provisioning, machine creation and deletion, and other integrations are enabled. If None, no infrastructure automation is enabled. Allowed values are \"AWS\", \"Azure\", \"BareMetal\", \"GCP\", \"Libvirt\", \"OpenStack\", \"VSphere\", \"oVirt\", \"EquinixMetal\", \"PowerVS\", \"AlibabaCloud\", \"Nutanix\" and \"None\". Individual components may not support all platforms, and must handle unrecognized platforms as None if they do not support that platform.\n\nThis value will be synced with to the `status.platform` and `status.platformStatus.type`. Currently this value cannot be changed once set.",
          "type": "string",
          "default": ""
        },
        "vsphere": {
          "description": "VSpherePlatformStatus holds the current status of the vSphere infrastructure provider.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "apiServerInternalIPs",
            "ingressIPs"
          ],
          "properties": {
            "apiServerInternalIP": {
              "description": "apiServerInternalIP is an IP address to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. It is the IP that the Infrastructure.status.apiServerInternalURI points to. It is the IP for a self-hosted load balancer in front of the API servers.\n\nDeprecated: Use APIServerInternalIPs instead.",
              "type": [
                "string",
                "null"
              ]
            },
            "apiServerInternalIPs": {
              "description": "apiServerInternalIPs are the IP addresses to contact the Kubernetes API server that can be used by components inside the cluster, like kubelets using the infrastructure rather than Kubernetes networking. These are the IPs for a self-hosted load balancer in front of the API servers. In dual stack clusters this list contains two IPs otherwise only one.",
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "ingressIP": {
              "description": "ingressIP is an external IP which routes to the default ingress controller. The IP is a suitable target of a wildcard DNS record used to resolve default route host names.\n\nDeprecated: Use IngressIPs instead.",
              "type": [
                "string",
                "null"
              ]
            },
            "ingressIPs": {
              "description": "ingressIPs are the external IPs which route to the default ingress controller. The IPs are suitable targets of a wildcard DNS record used to resolve default route host names. In dual stack clusters this list contains two IPs otherwise only one.",
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "nodeDNSIP": {
              "description": "nodeDNSIP is the IP address for the internal DNS used by the nodes. Unlike the one managed by the DNS operator, `NodeDNSIP` provides name resolution for the nodes themselves. There is no DNS-as-a-service for vSphere deployments. In order to minimize necessary changes to the datacenter DNS, a DNS service is hosted as a static pod to serve those hostnames to the nodes in the cluster.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}