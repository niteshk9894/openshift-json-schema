{
  "type": "object",
  "properties": {
    "additionalTrustedCA": {
      "description": "ConfigMapNameReference references a config map in a specific namespace. The namespace must be specified at the point of use.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "name is the metadata.name of the referenced config map",
          "type": "string",
          "default": ""
        }
      }
    },
    "buildDefaults": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "defaultProxy": {
          "description": "ProxySpec contains cluster proxy creation configuration.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "httpProxy": {
              "description": "httpProxy is the URL of the proxy for HTTP requests.  Empty means unset and will not result in an env var.",
              "type": [
                "string",
                "null"
              ]
            },
            "httpsProxy": {
              "description": "httpsProxy is the URL of the proxy for HTTPS requests.  Empty means unset and will not result in an env var.",
              "type": [
                "string",
                "null"
              ]
            },
            "noProxy": {
              "description": "noProxy is a comma-separated list of hostnames and/or CIDRs and/or IPs for which the proxy should not be used. Empty means unset and will not result in an env var.",
              "type": [
                "string",
                "null"
              ]
            },
            "readinessEndpoints": {
              "description": "readinessEndpoints is a list of endpoints used to verify readiness of the proxy.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "trustedCA": {
              "description": "ConfigMapNameReference references a config map in a specific namespace. The namespace must be specified at the point of use.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "name is the metadata.name of the referenced config map",
                  "type": "string",
                  "default": ""
                }
              }
            }
          }
        },
        "env": {
          "description": "Env is a set of default environment variables that will be applied to the build if the specified variables do not exist on the build",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "EnvVar represents an environment variable present in a Container.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                "type": "string",
                "default": ""
              },
              "value": {
                "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                "type": [
                  "string",
                  "null"
                ]
              },
              "valueFrom": {
                "description": "EnvVarSource represents a source for the value of an EnvVar.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "configMapKeyRef": {
                    "description": "Selects a key from a ConfigMap.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string",
                        "default": ""
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the ConfigMap or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "fieldRef": {
                    "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "fieldPath"
                    ],
                    "properties": {
                      "apiVersion": {
                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "fieldPath": {
                        "description": "Path of the field to select in the specified API version.",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "resourceFieldRef": {
                    "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "resource"
                    ],
                    "properties": {
                      "containerName": {
                        "description": "Container name: required for volumes, optional for env vars",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "divisor": {
                        "oneOf": [
                          {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          {
                            "type": [
                              "number",
                              "null"
                            ]
                          }
                        ]
                      },
                      "resource": {
                        "description": "Required: resource to select",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "secretKeyRef": {
                    "description": "SecretKeySelector selects a key of a Secret.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string",
                        "default": ""
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  }
                }
              }
            }
          }
        },
        "gitProxy": {
          "description": "ProxySpec contains cluster proxy creation configuration.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "httpProxy": {
              "description": "httpProxy is the URL of the proxy for HTTP requests.  Empty means unset and will not result in an env var.",
              "type": [
                "string",
                "null"
              ]
            },
            "httpsProxy": {
              "description": "httpsProxy is the URL of the proxy for HTTPS requests.  Empty means unset and will not result in an env var.",
              "type": [
                "string",
                "null"
              ]
            },
            "noProxy": {
              "description": "noProxy is a comma-separated list of hostnames and/or CIDRs and/or IPs for which the proxy should not be used. Empty means unset and will not result in an env var.",
              "type": [
                "string",
                "null"
              ]
            },
            "readinessEndpoints": {
              "description": "readinessEndpoints is a list of endpoints used to verify readiness of the proxy.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "trustedCA": {
              "description": "ConfigMapNameReference references a config map in a specific namespace. The namespace must be specified at the point of use.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "name is the metadata.name of the referenced config map",
                  "type": "string",
                  "default": ""
                }
              }
            }
          }
        },
        "imageLabels": {
          "description": "ImageLabels is a list of docker labels that are applied to the resulting image. User can override a default label by providing a label with the same name in their Build/BuildConfig.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Name defines the name of the label. It must have non-zero length.",
                "type": "string",
                "default": ""
              },
              "value": {
                "description": "Value defines the literal value of the label.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "resources": {
          "description": "ResourceRequirements describes the compute resource requirements.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "limits": {
              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  {
                    "type": [
                      "number",
                      "null"
                    ]
                  }
                ]
              }
            },
            "requests": {
              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  {
                    "type": [
                      "number",
                      "null"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "buildOverrides": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "forcePull": {
          "description": "ForcePull overrides, if set, the equivalent value in the builds, i.e. false disables force pull for all builds, true enables force pull for all builds, independently of what each build specifies itself",
          "type": [
            "boolean",
            "null"
          ]
        },
        "imageLabels": {
          "description": "ImageLabels is a list of docker labels that are applied to the resulting image. If user provided a label in their Build/BuildConfig with the same name as one in this list, the user's label will be overwritten.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Name defines the name of the label. It must have non-zero length.",
                "type": "string",
                "default": ""
              },
              "value": {
                "description": "Value defines the literal value of the label.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "nodeSelector": {
          "description": "NodeSelector is a selector which must be true for the build pod to fit on a node",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "tolerations": {
          "description": "Tolerations is a list of Tolerations that will override any existing tolerations set on a build pod.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n\nPossible enum values:\n - `\"NoExecute\"` Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController.\n - `\"NoSchedule\"` Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.\n - `\"PreferNoSchedule\"` Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "NoExecute",
                  "NoSchedule",
                  "PreferNoSchedule"
                ]
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n\nPossible enum values:\n - `\"Equal\"`\n - `\"Exists\"`",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "Equal",
                  "Exists"
                ]
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        }
      }
    }
  },
  "$schema": "http://json-schema.org/schema#"
}