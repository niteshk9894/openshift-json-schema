{
  "description": "RequestHeaderIdentityProvider provides identities for users authenticating using request header credentials\n\nCompatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.",
  "type": "object",
  "required": [
    "loginURL",
    "challengeURL",
    "clientCA",
    "clientCommonNames",
    "headers",
    "preferredUsernameHeaders",
    "nameHeaders",
    "emailHeaders"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "challengeURL": {
      "description": "ChallengeURL is a URL to redirect unauthenticated /authorize requests to Unauthenticated requests from OAuth clients which expect WWW-Authenticate challenges will be redirected here ${url} is replaced with the current URL, escaped to be safe in a query parameter\n  https://www.example.com/sso-login?then=${url}\n${query} is replaced with the current query string\n  https://www.example.com/auth-proxy/oauth/authorize?${query}",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "clientCA": {
      "description": "ClientCA is a file with the trusted signer certs.  If empty, no request verification is done, and any direct request to the OAuth server can impersonate any identity from this provider, merely by setting a request header.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "clientCommonNames": {
      "description": "ClientCommonNames is an optional list of common names to require a match from. If empty, any client certificate validated against the clientCA bundle is considered authoritative.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "emailHeaders": {
      "description": "EmailHeaders is the set of headers to check for the email address",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "headers": {
      "description": "Headers is the set of headers to check for identity information",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ]
    },
    "loginURL": {
      "description": "LoginURL is a URL to redirect unauthenticated /authorize requests to Unauthenticated requests from OAuth clients which expect interactive logins will be redirected here ${url} is replaced with the current URL, escaped to be safe in a query parameter\n  https://www.example.com/sso-login?then=${url}\n${query} is replaced with the current query string\n  https://www.example.com/auth-proxy/oauth/authorize?${query}",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "nameHeaders": {
      "description": "NameHeaders is the set of headers to check for the display name",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "preferredUsernameHeaders": {
      "description": "PreferredUsernameHeaders is the set of headers to check for the preferred username",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    }
  },
  "$schema": "http://json-schema.org/schema#"
}