{
  "description": "Compatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.",
  "type": "object",
  "required": [
    "kubeClientConfig",
    "servingInfo",
    "leaderElection",
    "controllers",
    "resourceQuota",
    "serviceServingCert",
    "deployer",
    "build",
    "serviceAccount",
    "dockerPullSecret",
    "network",
    "ingress",
    "imageImport",
    "securityAllocator",
    "featureGates"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "build": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "imageTemplateFormat",
        "buildDefaults",
        "buildOverrides",
        "additionalTrustedCA"
      ],
      "properties": {
        "additionalTrustedCA": {
          "description": "additionalTrustedCA is a path to a pem bundle file containing additional CAs that should be trusted for image pushes and pulls during builds.",
          "type": "string",
          "default": ""
        },
        "buildDefaults": {
          "description": "BuildDefaultsConfig controls the default information for Builds\n\nCompatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "annotations are annotations that will be added to the build pod",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "apiVersion": {
              "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
              "type": [
                "string",
                "null"
              ]
            },
            "env": {
              "description": "env is a set of default environment variables that will be applied to the build if the specified variables do not exist on the build",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string",
                    "default": ""
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "valueFrom": {
                    "description": "EnvVarSource represents a source for the value of an EnvVar.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key from a ConfigMap.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string",
                            "default": ""
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "fieldRef": {
                        "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string",
                            "default": ""
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "resourceFieldRef": {
                        "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "divisor": {
                            "oneOf": [
                              {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              {
                                "type": [
                                  "number",
                                  "null"
                                ]
                              }
                            ]
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string",
                            "default": ""
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secretKeyRef": {
                        "description": "SecretKeySelector selects a key of a Secret.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string",
                            "default": ""
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    }
                  }
                }
              }
            },
            "gitHTTPProxy": {
              "description": "gitHTTPProxy is the location of the HTTPProxy for Git source",
              "type": [
                "string",
                "null"
              ]
            },
            "gitHTTPSProxy": {
              "description": "gitHTTPSProxy is the location of the HTTPSProxy for Git source",
              "type": [
                "string",
                "null"
              ]
            },
            "gitNoProxy": {
              "description": "gitNoProxy is the list of domains for which the proxy should not be used",
              "type": [
                "string",
                "null"
              ]
            },
            "imageLabels": {
              "description": "imageLabels is a list of labels that are applied to the resulting image. User can override a default label by providing a label with the same name in their Build/BuildConfig.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ImageLabel represents a label applied to the resulting image.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "name defines the name of the label. It must have non-zero length.",
                    "type": "string",
                    "default": ""
                  },
                  "value": {
                    "description": "value defines the literal value of the label.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            },
            "kind": {
              "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": [
                "string",
                "null"
              ]
            },
            "nodeSelector": {
              "description": "nodeSelector is a selector which must be true for the build pod to fit on a node",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "resources": {
              "description": "ResourceRequirements describes the compute resource requirements.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "limits": {
                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      {
                        "type": [
                          "number",
                          "null"
                        ]
                      }
                    ]
                  }
                },
                "requests": {
                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      {
                        "type": [
                          "number",
                          "null"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "sourceStrategyDefaults": {
              "description": "SourceStrategyDefaultsConfig contains values that apply to builds using the source strategy.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "incremental": {
                  "description": "incremental indicates if s2i build strategies should perform an incremental build or not",
                  "type": [
                    "boolean",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "buildOverrides": {
          "description": "BuildOverridesConfig controls override settings for builds\n\nCompatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "annotations are annotations that will be added to the build pod",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "apiVersion": {
              "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
              "type": [
                "string",
                "null"
              ]
            },
            "forcePull": {
              "description": "forcePull overrides, if set, the equivalent value in the builds, i.e. false disables force pull for all builds, true enables force pull for all builds, independently of what each build specifies itself",
              "type": [
                "boolean",
                "null"
              ]
            },
            "imageLabels": {
              "description": "imageLabels is a list of labels that are applied to the resulting image. If user provided a label in their Build/BuildConfig with the same name as one in this list, the user's label will be overwritten.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ImageLabel represents a label applied to the resulting image.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "name defines the name of the label. It must have non-zero length.",
                    "type": "string",
                    "default": ""
                  },
                  "value": {
                    "description": "value defines the literal value of the label.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            },
            "kind": {
              "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": [
                "string",
                "null"
              ]
            },
            "nodeSelector": {
              "description": "nodeSelector is a selector which must be true for the build pod to fit on a node",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ],
                "default": ""
              }
            },
            "tolerations": {
              "description": "tolerations is a list of Tolerations that will override any existing tolerations set on a build pod.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n\nPossible enum values:\n - `\"NoExecute\"` Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController.\n - `\"NoSchedule\"` Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.\n - `\"PreferNoSchedule\"` Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "NoExecute",
                      "NoSchedule",
                      "PreferNoSchedule"
                    ]
                  },
                  "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "operator": {
                    "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n\nPossible enum values:\n - `\"Equal\"`\n - `\"Exists\"`",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "Equal",
                      "Exists"
                    ]
                  },
                  "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "value": {
                    "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "imageTemplateFormat": {
          "description": "ImageConfig holds the necessary configuration options for building image names for system components",
          "type": "object",
          "required": [
            "format",
            "latest"
          ],
          "properties": {
            "format": {
              "description": "Format is the format of the name to be built for the system component",
              "type": "string",
              "default": ""
            },
            "latest": {
              "description": "Latest determines if the latest tag will be pulled from the registry",
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    },
    "controllers": {
      "description": "controllers is a list of controllers to enable.  '*' enables all on-by-default controllers, 'foo' enables the controller \"+ named 'foo', '-foo' disables the controller named 'foo'. Defaults to \"*\".",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "deployer": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "imageTemplateFormat"
      ],
      "properties": {
        "imageTemplateFormat": {
          "description": "ImageConfig holds the necessary configuration options for building image names for system components",
          "type": "object",
          "required": [
            "format",
            "latest"
          ],
          "properties": {
            "format": {
              "description": "Format is the format of the name to be built for the system component",
              "type": "string",
              "default": ""
            },
            "latest": {
              "description": "Latest determines if the latest tag will be pulled from the registry",
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    },
    "dockerPullSecret": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "registryURLs",
        "internalRegistryHostname"
      ],
      "properties": {
        "internalRegistryHostname": {
          "description": "internalRegistryHostname is the hostname for the default internal image registry. The value must be in \"hostname[:port]\" format.  Docker pull secrets will be generated for this registry.",
          "type": "string",
          "default": ""
        },
        "registryURLs": {
          "description": "registryURLs is a list of urls that the docker pull secrets should be valid for.",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        }
      }
    },
    "featureGates": {
      "description": "featureGates are the set of extra OpenShift feature gates for openshift-controller-manager. These feature gates can be used to enable features that are tech preview or otherwise not available on OpenShift by default.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "imageImport": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "maxScheduledImageImportsPerMinute",
        "disableScheduledImport",
        "scheduledImageImportMinimumIntervalSeconds"
      ],
      "properties": {
        "disableScheduledImport": {
          "description": "disableScheduledImport allows scheduled background import of images to be disabled.",
          "type": "boolean",
          "default": false
        },
        "maxScheduledImageImportsPerMinute": {
          "description": "maxScheduledImageImportsPerMinute is the maximum number of image streams that will be imported in the background per minute. The default value is 60. Set to -1 for unlimited.",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "scheduledImageImportMinimumIntervalSeconds": {
          "description": "scheduledImageImportMinimumIntervalSeconds is the minimum number of seconds that can elapse between when image streams scheduled for background import are checked against the upstream repository. The default value is 15 minutes.",
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "ingress": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "ingressIPNetworkCIDR"
      ],
      "properties": {
        "ingressIPNetworkCIDR": {
          "description": "ingressIPNetworkCIDR controls the range to assign ingress ips from for services of type LoadBalancer on bare metal. If empty, ingress ips will not be assigned. It may contain a single CIDR that will be allocated from. For security reasons, you should ensure that this range does not overlap with the CIDRs reserved for external ips, nodes, pods, or services.",
          "type": "string",
          "default": ""
        }
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ]
    },
    "kubeClientConfig": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "kubeConfig",
        "connectionOverrides"
      ],
      "properties": {
        "connectionOverrides": {
          "type": "object",
          "required": [
            "acceptContentTypes",
            "contentType",
            "qps",
            "burst"
          ],
          "properties": {
            "acceptContentTypes": {
              "description": "acceptContentTypes defines the Accept header sent by clients when connecting to a server, overriding the default value of 'application/json'. This field will control all connections to the server used by a particular client.",
              "type": "string",
              "default": ""
            },
            "burst": {
              "description": "burst allows extra queries to accumulate when a client is exceeding its rate.",
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "contentType": {
              "description": "contentType is the content type used when sending data to the server from this client.",
              "type": "string",
              "default": ""
            },
            "qps": {
              "description": "qps controls the number of queries per second allowed for this connection.",
              "type": "number",
              "format": "float",
              "default": 0
            }
          }
        },
        "kubeConfig": {
          "description": "kubeConfig is a .kubeconfig filename for going to the owning kube-apiserver.  Empty uses an in-cluster-config",
          "type": "string",
          "default": ""
        }
      }
    },
    "leaderElection": {
      "description": "LeaderElection provides information to elect a leader",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "leaseDuration",
        "renewDeadline",
        "retryPeriod"
      ],
      "properties": {
        "disable": {
          "description": "disable allows leader election to be suspended while allowing a fully defaulted \"normal\" startup case.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "leaseDuration": {
          "description": "Duration is a wrapper around time.Duration which supports correct marshaling to YAML and JSON. In particular, it marshals into strings, which can be used as map keys in json.",
          "type": "string"
        },
        "name": {
          "description": "name indicates what name to use for the resource",
          "type": [
            "string",
            "null"
          ]
        },
        "namespace": {
          "description": "namespace indicates which namespace the resource is in",
          "type": [
            "string",
            "null"
          ]
        },
        "renewDeadline": {
          "description": "Duration is a wrapper around time.Duration which supports correct marshaling to YAML and JSON. In particular, it marshals into strings, which can be used as map keys in json.",
          "type": "string"
        },
        "retryPeriod": {
          "description": "Duration is a wrapper around time.Duration which supports correct marshaling to YAML and JSON. In particular, it marshals into strings, which can be used as map keys in json.",
          "type": "string"
        }
      }
    },
    "network": {
      "description": "MasterNetworkConfig to be passed to the compiled in network plugin",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "networkPluginName",
        "clusterNetworks",
        "serviceNetworkCIDR",
        "vxlanPort"
      ],
      "properties": {
        "clusterNetworks": {
          "description": "clusterNetworks contains a list of cluster networks that defines the global overlay networks L3 space.",
          "type": "array",
          "items": {
            "description": "ClusterNetworkEntry defines an individual cluster network. The CIDRs cannot overlap with other cluster network CIDRs, CIDRs reserved for external ips, CIDRs reserved for service networks, and CIDRs reserved for ingress ips.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "cidr",
              "hostSubnetLength"
            ],
            "properties": {
              "cidr": {
                "description": "CIDR defines the total range of a cluster networks address space.",
                "type": "string",
                "default": ""
              },
              "hostSubnetLength": {
                "description": "HostSubnetLength is the number of bits of the accompanying CIDR address to allocate to each node. eg, 8 would mean that each node would have a /24 slice of the overlay network for its pod.",
                "type": "integer",
                "format": "int64",
                "default": 0
              }
            }
          }
        },
        "networkPluginName": {
          "type": "string",
          "default": ""
        },
        "serviceNetworkCIDR": {
          "type": "string",
          "default": ""
        },
        "vxlanPort": {
          "type": "integer",
          "format": "int64",
          "default": 0
        }
      }
    },
    "resourceQuota": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "concurrentSyncs",
        "syncPeriod",
        "minResyncPeriod"
      ],
      "properties": {
        "concurrentSyncs": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "minResyncPeriod": {
          "description": "Duration is a wrapper around time.Duration which supports correct marshaling to YAML and JSON. In particular, it marshals into strings, which can be used as map keys in json.",
          "type": "string"
        },
        "syncPeriod": {
          "description": "Duration is a wrapper around time.Duration which supports correct marshaling to YAML and JSON. In particular, it marshals into strings, which can be used as map keys in json.",
          "type": "string"
        }
      }
    },
    "securityAllocator": {
      "description": "SecurityAllocator controls the automatic allocation of UIDs and MCS labels to a project. If nil, allocation is disabled.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "uidAllocatorRange",
        "mcsAllocatorRange",
        "mcsLabelsPerProject"
      ],
      "properties": {
        "mcsAllocatorRange": {
          "description": "MCSAllocatorRange defines the range of MCS categories that will be assigned to namespaces. The format is \"<prefix>/<numberOfLabels>[,<maxCategory>]\". The default is \"s0/2\" and will allocate from c0 -> c1023, which means a total of 535k labels are available (1024 choose 2 ~ 535k). If this value is changed after startup, new projects may receive labels that are already allocated to other projects. Prefix may be any valid SELinux set of terms (including user, role, and type), although leaving them as the default will allow the server to set them automatically.\n\nExamples: * s0:/2     - Allocate labels from s0:c0,c0 to s0:c511,c511 * s0:/2,512 - Allocate labels from s0:c0,c0,c0 to s0:c511,c511,511",
          "type": "string",
          "default": ""
        },
        "mcsLabelsPerProject": {
          "description": "MCSLabelsPerProject defines the number of labels that should be reserved per project. The default is 5 to match the default UID and MCS ranges (100k namespaces, 535k/5 labels).",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "uidAllocatorRange": {
          "description": "UIDAllocatorRange defines the total set of Unix user IDs (UIDs) that will be allocated to projects automatically, and the size of the block each namespace gets. For example, 1000-1999/10 will allocate ten UIDs per namespace, and will be able to allocate up to 100 blocks before running out of space. The default is to allocate from 1 billion to 2 billion in 10k blocks (which is the expected size of the ranges container images will use once user namespaces are started).",
          "type": "string",
          "default": ""
        }
      }
    },
    "serviceAccount": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "managedNames"
      ],
      "properties": {
        "managedNames": {
          "description": "managedNames is a list of service account names that will be auto-created in every namespace. If no names are specified, the ServiceAccountsController will not be started.",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        }
      }
    },
    "serviceServingCert": {
      "description": "ServiceServingCert holds configuration for service serving cert signer which creates cert/key pairs for pods fulfilling a service to serve with.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "signer"
      ],
      "properties": {
        "signer": {
          "description": "CertInfo relates a certificate with a private key",
          "type": "object",
          "required": [
            "certFile",
            "keyFile"
          ],
          "properties": {
            "certFile": {
              "description": "CertFile is a file containing a PEM-encoded certificate",
              "type": "string",
              "default": ""
            },
            "keyFile": {
              "description": "KeyFile is a file containing a PEM-encoded private key for the certificate specified by CertFile",
              "type": "string",
              "default": ""
            }
          }
        }
      }
    },
    "servingInfo": {
      "description": "HTTPServingInfo holds configuration for serving HTTP",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "bindAddress",
        "bindNetwork",
        "certFile",
        "keyFile",
        "maxRequestsInFlight",
        "requestTimeoutSeconds"
      ],
      "properties": {
        "bindAddress": {
          "description": "BindAddress is the ip:port to serve on",
          "type": "string",
          "default": ""
        },
        "bindNetwork": {
          "description": "BindNetwork is the type of network to bind to - defaults to \"tcp4\", accepts \"tcp\", \"tcp4\", and \"tcp6\"",
          "type": "string",
          "default": ""
        },
        "certFile": {
          "description": "CertFile is a file containing a PEM-encoded certificate",
          "type": "string",
          "default": ""
        },
        "cipherSuites": {
          "description": "CipherSuites contains an overridden list of ciphers for the server to support. Values must match cipher suite IDs from https://golang.org/pkg/crypto/tls/#pkg-constants",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "clientCA": {
          "description": "ClientCA is the certificate bundle for all the signers that you'll recognize for incoming client certificates",
          "type": [
            "string",
            "null"
          ]
        },
        "keyFile": {
          "description": "KeyFile is a file containing a PEM-encoded private key for the certificate specified by CertFile",
          "type": "string",
          "default": ""
        },
        "maxRequestsInFlight": {
          "description": "MaxRequestsInFlight is the number of concurrent requests allowed to the server. If zero, no limit.",
          "type": "integer",
          "format": "int64",
          "default": 0
        },
        "minTLSVersion": {
          "description": "MinTLSVersion is the minimum TLS version supported. Values must match version names from https://golang.org/pkg/crypto/tls/#pkg-constants",
          "type": [
            "string",
            "null"
          ]
        },
        "namedCertificates": {
          "description": "NamedCertificates is a list of certificates to use to secure requests to specific hostnames",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "NamedCertificate specifies a certificate/key, and the names it should be served for",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "certFile",
              "keyFile"
            ],
            "properties": {
              "certFile": {
                "description": "CertFile is a file containing a PEM-encoded certificate",
                "type": "string",
                "default": ""
              },
              "keyFile": {
                "description": "KeyFile is a file containing a PEM-encoded private key for the certificate specified by CertFile",
                "type": "string",
                "default": ""
              },
              "names": {
                "description": "Names is a list of DNS names this certificate should be used to secure A name can be a normal DNS name, or can contain leading wildcard segments.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "default": ""
                }
              }
            }
          }
        },
        "requestTimeoutSeconds": {
          "description": "RequestTimeoutSeconds is the number of seconds before requests are timed out. The default is 60 minutes, if -1 there is no limit on requests.",
          "type": "integer",
          "format": "int64",
          "default": 0
        }
      }
    }
  },
  "$schema": "http://json-schema.org/schema#"
}