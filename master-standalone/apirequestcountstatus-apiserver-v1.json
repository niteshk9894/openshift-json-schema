{
  "type": "object",
  "required": [
    "conditions",
    "requestCount"
  ],
  "properties": {
    "conditions": {
      "description": "conditions contains details of the current status of this API Resource.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "Condition contains details for one aspect of the current state of this API Resource.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "type",
          "status",
          "lastTransitionTime",
          "reason",
          "message"
        ],
        "properties": {
          "lastTransitionTime": {
            "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
            "type": "string",
            "default": ""
          },
          "observedGeneration": {
            "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "reason": {
            "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
            "type": "string",
            "default": ""
          },
          "status": {
            "description": "status of the condition, one of True, False, Unknown.",
            "type": "string",
            "default": ""
          },
          "type": {
            "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
            "type": "string",
            "default": ""
          }
        }
      },
      "x-kubernetes-patch-merge-key": "type",
      "x-kubernetes-patch-strategy": "merge"
    },
    "currentHour": {
      "description": "PerResourceAPIRequestLog logs request for various nodes.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "requestCount"
      ],
      "properties": {
        "byNode": {
          "description": "byNode contains logs of requests per node.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "PerNodeAPIRequestLog contains logs of requests to a certain node.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "nodeName",
              "requestCount",
              "byUser"
            ],
            "properties": {
              "byUser": {
                "description": "byUser contains request details by top .spec.numberOfUsersToReport users. Note that because in the case of an apiserver, restart the list of top users is determined on a best-effort basis, the list might be imprecise. In addition, some system users may be explicitly included in the list.",
                "type": "array",
                "items": {
                  "description": "PerUserAPIRequestCount contains logs of a user's requests.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "username",
                    "userAgent",
                    "requestCount",
                    "byVerb"
                  ],
                  "properties": {
                    "byVerb": {
                      "description": "byVerb details by verb.",
                      "type": "array",
                      "items": {
                        "description": "PerVerbAPIRequestCount requestCounts requests by API request verb.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "verb",
                          "requestCount"
                        ],
                        "properties": {
                          "requestCount": {
                            "description": "requestCount of requests for verb.",
                            "type": "integer",
                            "format": "int64",
                            "default": 0
                          },
                          "verb": {
                            "description": "verb of API request (get, list, create, etc...)",
                            "type": "string",
                            "default": ""
                          }
                        }
                      }
                    },
                    "requestCount": {
                      "description": "requestCount of requests by the user across all verbs.",
                      "type": "integer",
                      "format": "int64",
                      "default": 0
                    },
                    "userAgent": {
                      "description": "userAgent that made the request. The same user often has multiple binaries which connect (pods with many containers).  The different binaries will have different userAgents, but the same user.  In addition, we have userAgents with version information embedded and the userName isn't likely to change.",
                      "type": "string",
                      "default": ""
                    },
                    "username": {
                      "description": "userName that made the request.",
                      "type": "string",
                      "default": ""
                    }
                  }
                }
              },
              "nodeName": {
                "description": "nodeName where the request are being handled.",
                "type": "string",
                "default": ""
              },
              "requestCount": {
                "description": "requestCount is a sum of all requestCounts across all users, even those outside of the top 10 users.",
                "type": "integer",
                "format": "int64",
                "default": 0
              }
            }
          }
        },
        "requestCount": {
          "description": "requestCount is a sum of all requestCounts across nodes.",
          "type": "integer",
          "format": "int64",
          "default": 0
        }
      }
    },
    "last24h": {
      "description": "last24h contains request history for the last 24 hours, indexed by the hour, so 12:00AM-12:59 is in index 0, 6am-6:59am is index 6, etc. The index of the current hour is updated live and then duplicated into the requestsLastHour field.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "PerResourceAPIRequestLog logs request for various nodes.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "requestCount"
        ],
        "properties": {
          "byNode": {
            "description": "byNode contains logs of requests per node.",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "description": "PerNodeAPIRequestLog contains logs of requests to a certain node.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "nodeName",
                "requestCount",
                "byUser"
              ],
              "properties": {
                "byUser": {
                  "description": "byUser contains request details by top .spec.numberOfUsersToReport users. Note that because in the case of an apiserver, restart the list of top users is determined on a best-effort basis, the list might be imprecise. In addition, some system users may be explicitly included in the list.",
                  "type": "array",
                  "items": {
                    "description": "PerUserAPIRequestCount contains logs of a user's requests.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "username",
                      "userAgent",
                      "requestCount",
                      "byVerb"
                    ],
                    "properties": {
                      "byVerb": {
                        "description": "byVerb details by verb.",
                        "type": "array",
                        "items": {
                          "description": "PerVerbAPIRequestCount requestCounts requests by API request verb.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "verb",
                            "requestCount"
                          ],
                          "properties": {
                            "requestCount": {
                              "description": "requestCount of requests for verb.",
                              "type": "integer",
                              "format": "int64",
                              "default": 0
                            },
                            "verb": {
                              "description": "verb of API request (get, list, create, etc...)",
                              "type": "string",
                              "default": ""
                            }
                          }
                        }
                      },
                      "requestCount": {
                        "description": "requestCount of requests by the user across all verbs.",
                        "type": "integer",
                        "format": "int64",
                        "default": 0
                      },
                      "userAgent": {
                        "description": "userAgent that made the request. The same user often has multiple binaries which connect (pods with many containers).  The different binaries will have different userAgents, but the same user.  In addition, we have userAgents with version information embedded and the userName isn't likely to change.",
                        "type": "string",
                        "default": ""
                      },
                      "username": {
                        "description": "userName that made the request.",
                        "type": "string",
                        "default": ""
                      }
                    }
                  }
                },
                "nodeName": {
                  "description": "nodeName where the request are being handled.",
                  "type": "string",
                  "default": ""
                },
                "requestCount": {
                  "description": "requestCount is a sum of all requestCounts across all users, even those outside of the top 10 users.",
                  "type": "integer",
                  "format": "int64",
                  "default": 0
                }
              }
            }
          },
          "requestCount": {
            "description": "requestCount is a sum of all requestCounts across nodes.",
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        }
      }
    },
    "removedInRelease": {
      "description": "removedInRelease is when the API will be removed.",
      "type": [
        "string",
        "null"
      ]
    },
    "requestCount": {
      "description": "requestCount is a sum of all requestCounts across all current hours, nodes, and users.",
      "type": [
        "integer",
        "null"
      ],
      "format": "int64",
      "default": 0
    }
  },
  "$schema": "http://json-schema.org/schema#"
}