{
  "description": "PlatformSpec holds the desired state specific to the underlying infrastructure provider of the current cluster. Since these are used at spec-level for the underlying cluster, it is supposed that only one of the spec structs is set.",
  "type": "object",
  "required": [
    "type"
  ],
  "properties": {
    "alibabaCloud": {
      "description": "AlibabaCloudPlatformSpec holds the desired state of the Alibaba Cloud infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ]
    },
    "aws": {
      "description": "AWSPlatformSpec holds the desired state of the Amazon Web Services infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "serviceEndpoints": {
          "description": "serviceEndpoints list contains custom endpoints which will override default service endpoint of AWS Services. There must be only one ServiceEndpoint for a service.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "AWSServiceEndpoint store the configuration of a custom url to override existing defaults of AWS Services.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "url"
            ],
            "properties": {
              "name": {
                "description": "name is the name of the AWS service. The list of all the service names can be found at https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html This must be provided and cannot be empty.",
                "type": "string",
                "default": ""
              },
              "url": {
                "description": "url is fully qualified URI with scheme https, that overrides the default generated endpoint for a client. This must be provided and cannot be empty.",
                "type": "string",
                "default": ""
              }
            }
          }
        }
      }
    },
    "azure": {
      "description": "AzurePlatformSpec holds the desired state of the Azure infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ]
    },
    "baremetal": {
      "description": "BareMetalPlatformSpec holds the desired state of the BareMetal infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ]
    },
    "equinixMetal": {
      "description": "EquinixMetalPlatformSpec holds the desired state of the Equinix Metal infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ]
    },
    "gcp": {
      "description": "GCPPlatformSpec holds the desired state of the Google Cloud Platform infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ]
    },
    "ibmcloud": {
      "description": "IBMCloudPlatformSpec holds the desired state of the IBMCloud infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ]
    },
    "kubevirt": {
      "description": "KubevirtPlatformSpec holds the desired state of the kubevirt infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ]
    },
    "nutanix": {
      "description": "NutanixPlatformSpec holds the desired state of the Nutanix infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "prismCentral",
        "prismElements"
      ],
      "properties": {
        "prismCentral": {
          "description": "NutanixPrismEndpoint holds the endpoint address and port to access the Nutanix Prism Central or Element (cluster)",
          "type": "object",
          "required": [
            "address",
            "port"
          ],
          "properties": {
            "address": {
              "description": "address is the endpoint address (DNS name or IP address) of the Nutanix Prism Central or Element (cluster)",
              "type": "string",
              "default": ""
            },
            "port": {
              "description": "port is the port number to access the Nutanix Prism Central or Element (cluster)",
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        },
        "prismElements": {
          "description": "prismElements holds one or more endpoint address and port data to access the Nutanix Prism Elements (clusters) of the Nutanix Prism Central. Currently we only support one Prism Element (cluster) for an OpenShift cluster, where all the Nutanix resources (VMs, subnets, volumes, etc.) used in the OpenShift cluster are located. In the future, we may support Nutanix resources (VMs, etc.) spread over multiple Prism Elements (clusters) of the Prism Central.",
          "type": "array",
          "items": {
            "description": "NutanixPrismElementEndpoint holds the name and endpoint data for a Prism Element (cluster)",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "endpoint"
            ],
            "properties": {
              "endpoint": {
                "description": "NutanixPrismEndpoint holds the endpoint address and port to access the Nutanix Prism Central or Element (cluster)",
                "type": "object",
                "required": [
                  "address",
                  "port"
                ],
                "properties": {
                  "address": {
                    "description": "address is the endpoint address (DNS name or IP address) of the Nutanix Prism Central or Element (cluster)",
                    "type": "string",
                    "default": ""
                  },
                  "port": {
                    "description": "port is the port number to access the Nutanix Prism Central or Element (cluster)",
                    "type": "integer",
                    "format": "int32",
                    "default": 0
                  }
                }
              },
              "name": {
                "description": "name is the name of the Prism Element (cluster). This value will correspond with the cluster field configured on other resources (eg Machines, PVCs, etc).",
                "type": "string",
                "default": ""
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        }
      }
    },
    "openstack": {
      "description": "OpenStackPlatformSpec holds the desired state of the OpenStack infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ]
    },
    "ovirt": {
      "description": "OvirtPlatformSpec holds the desired state of the oVirt infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ]
    },
    "powervs": {
      "description": "PowerVSPlatformSpec holds the desired state of the IBM Power Systems Virtual Servers infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "serviceEndpoints": {
          "description": "serviceEndpoints is a list of custom endpoints which will override the default service endpoints of a Power VS service.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "PowervsServiceEndpoint stores the configuration of a custom url to override existing defaults of PowerVS Services.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "url"
            ],
            "properties": {
              "name": {
                "description": "name is the name of the Power VS service. Few of the services are IAM - https://cloud.ibm.com/apidocs/iam-identity-token-api ResourceController - https://cloud.ibm.com/apidocs/resource-controller/resource-controller Power Cloud - https://cloud.ibm.com/apidocs/power-cloud",
                "type": "string",
                "default": ""
              },
              "url": {
                "description": "url is fully qualified URI with scheme https, that overrides the default generated endpoint for a client. This must be provided and cannot be empty.",
                "type": "string",
                "default": ""
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        }
      }
    },
    "type": {
      "description": "type is the underlying infrastructure provider for the cluster. This value controls whether infrastructure automation such as service load balancers, dynamic volume provisioning, machine creation and deletion, and other integrations are enabled. If None, no infrastructure automation is enabled. Allowed values are \"AWS\", \"Azure\", \"BareMetal\", \"GCP\", \"Libvirt\", \"OpenStack\", \"VSphere\", \"oVirt\", \"KubeVirt\", \"EquinixMetal\", \"PowerVS\", \"AlibabaCloud\", \"Nutanix\" and \"None\". Individual components may not support all platforms, and must handle unrecognized platforms as None if they do not support that platform.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "vsphere": {
      "description": "VSpherePlatformSpec holds the desired state of the vSphere infrastructure provider. This only includes fields that can be modified in the cluster.",
      "type": [
        "object",
        "null"
      ]
    }
  },
  "$schema": "http://json-schema.org/schema#"
}