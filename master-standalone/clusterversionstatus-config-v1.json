{
  "description": "ClusterVersionStatus reports the status of the cluster versioning, including any upgrades that are in progress. The current field will be set to whichever version the cluster is reconciling to, and the conditions array will report whether the update succeeded, is in progress, or is failing.",
  "type": "object",
  "required": [
    "desired",
    "observedGeneration",
    "versionHash",
    "capabilities",
    "availableUpdates"
  ],
  "properties": {
    "availableUpdates": {
      "description": "availableUpdates contains updates recommended for this cluster. Updates which appear in conditionalUpdates but not in availableUpdates may expose this cluster to known issues. This list may be empty if no updates are recommended, if the update service is unavailable, or if an invalid channel has been specified.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "Release represents an OpenShift release image and associated metadata.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "version",
          "image"
        ],
        "properties": {
          "channels": {
            "description": "channels is the set of Cincinnati channels to which the release currently belongs.",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "default": ""
            }
          },
          "image": {
            "description": "image is a container image location that contains the update. When this field is part of spec, image is optional if version is specified and the availableUpdates field contains a matching version.",
            "type": "string",
            "default": ""
          },
          "url": {
            "description": "url contains information about this release. This URL is set by the 'url' metadata property on a release or the metadata returned by the update API and should be displayed as a link in user interfaces. The URL field may not be set for test or nightly releases.",
            "type": [
              "string",
              "null"
            ]
          },
          "version": {
            "description": "version is a semantic versioning identifying the update version. When this field is part of spec, version is optional if image is specified.",
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "capabilities": {
      "description": "ClusterVersionCapabilitiesStatus describes the state of optional, core cluster components.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "enabledCapabilities": {
          "description": "enabledCapabilities lists all the capabilities that are currently managed.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          },
          "x-kubernetes-list-type": "atomic"
        },
        "knownCapabilities": {
          "description": "knownCapabilities lists all the capabilities known to the current cluster.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "conditionalUpdates": {
      "description": "conditionalUpdates contains the list of updates that may be recommended for this cluster if it meets specific required conditions. Consumers interested in the set of updates that are actually recommended for this cluster should use availableUpdates. This list may be empty if no updates are recommended, if the update service is unavailable, or if an empty or invalid channel has been specified.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "ConditionalUpdate represents an update which is recommended to some clusters on the version the current cluster is reconciling, but which may not be recommended for the current cluster.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "release",
          "risks"
        ],
        "properties": {
          "conditions": {
            "description": "conditions represents the observations of the conditional update's current status. Known types are: * Evaluating, for whether the cluster-version operator will attempt to evaluate any risks[].matchingRules. * Recommended, for whether the update is recommended for the current cluster.",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "description": "Condition contains details for one aspect of the current state of this API Resource.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type",
                "status",
                "lastTransitionTime",
                "reason",
                "message"
              ],
              "properties": {
                "lastTransitionTime": {
                  "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                  "type": "string",
                  "format": "date-time"
                },
                "message": {
                  "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                  "type": "string",
                  "default": ""
                },
                "observedGeneration": {
                  "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int64"
                },
                "reason": {
                  "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                  "type": "string",
                  "default": ""
                },
                "status": {
                  "description": "status of the condition, one of True, False, Unknown.",
                  "type": "string",
                  "default": ""
                },
                "type": {
                  "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                  "type": "string",
                  "default": ""
                }
              }
            },
            "x-kubernetes-list-map-keys": [
              "type"
            ],
            "x-kubernetes-list-type": "map",
            "x-kubernetes-patch-merge-key": "type",
            "x-kubernetes-patch-strategy": "merge"
          },
          "release": {
            "description": "Release represents an OpenShift release image and associated metadata.",
            "type": "object",
            "required": [
              "version",
              "image"
            ],
            "properties": {
              "channels": {
                "description": "channels is the set of Cincinnati channels to which the release currently belongs.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "default": ""
                }
              },
              "image": {
                "description": "image is a container image location that contains the update. When this field is part of spec, image is optional if version is specified and the availableUpdates field contains a matching version.",
                "type": "string",
                "default": ""
              },
              "url": {
                "description": "url contains information about this release. This URL is set by the 'url' metadata property on a release or the metadata returned by the update API and should be displayed as a link in user interfaces. The URL field may not be set for test or nightly releases.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "version": {
                "description": "version is a semantic versioning identifying the update version. When this field is part of spec, version is optional if image is specified.",
                "type": "string",
                "default": ""
              }
            }
          },
          "risks": {
            "description": "risks represents the range of issues associated with updating to the target release. The cluster-version operator will evaluate all entries, and only recommend the update if there is at least one entry and all entries recommend the update.",
            "type": "array",
            "items": {
              "description": "ConditionalUpdateRisk represents a reason and cluster-state for not recommending a conditional update.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "url",
                "name",
                "message",
                "matchingRules"
              ],
              "properties": {
                "matchingRules": {
                  "description": "matchingRules is a slice of conditions for deciding which clusters match the risk and which do not. The slice is ordered by decreasing precedence. The cluster-version operator will walk the slice in order, and stop after the first it can successfully evaluate. If no condition can be successfully evaluated, the update will not be recommended.",
                  "type": "array",
                  "items": {
                    "description": "ClusterCondition is a union of typed cluster conditions.  The 'type' property determines which of the type-specific properties are relevant. When evaluated on a cluster, the condition may match, not match, or fail to evaluate.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "promql": {
                        "description": "PromQLClusterCondition represents a cluster condition based on PromQL.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "promql"
                        ],
                        "properties": {
                          "promql": {
                            "description": "PromQL is a PromQL query classifying clusters. This query query should return a 1 in the match case and a 0 in the does-not-match case. Queries which return no time series, or which return values besides 0 or 1, are evaluation failures.",
                            "type": "string",
                            "default": ""
                          }
                        }
                      },
                      "type": {
                        "description": "type represents the cluster-condition type. This defines the members and semantics of any additional properties.",
                        "type": "string",
                        "default": ""
                      }
                    }
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "message": {
                  "description": "message provides additional information about the risk of updating, in the event that matchingRules match the cluster state. This is only to be consumed by humans. It may contain Line Feed characters (U+000A), which should be rendered as new lines.",
                  "type": "string",
                  "default": ""
                },
                "name": {
                  "description": "name is the CamelCase reason for not recommending a conditional update, in the event that matchingRules match the cluster state.",
                  "type": "string",
                  "default": ""
                },
                "url": {
                  "description": "url contains information about this risk.",
                  "type": "string",
                  "default": ""
                }
              }
            },
            "x-kubernetes-list-map-keys": [
              "name"
            ],
            "x-kubernetes-list-type": "map",
            "x-kubernetes-patch-merge-key": "name",
            "x-kubernetes-patch-strategy": "merge"
          }
        }
      },
      "x-kubernetes-list-type": "atomic"
    },
    "conditions": {
      "description": "conditions provides information about the cluster version. The condition \"Available\" is set to true if the desiredUpdate has been reached. The condition \"Progressing\" is set to true if an update is being applied. The condition \"Degraded\" is set to true if an update is currently blocked by a temporary or permanent error. Conditions are only valid for the current desiredUpdate when metadata.generation is equal to status.generation.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "ClusterOperatorStatusCondition represents the state of the operator's managed and monitored components.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "type",
          "status",
          "lastTransitionTime"
        ],
        "properties": {
          "lastTransitionTime": {
            "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "description": "message provides additional information about the current condition. This is only to be consumed by humans.  It may contain Line Feed characters (U+000A), which should be rendered as new lines.",
            "type": [
              "string",
              "null"
            ]
          },
          "reason": {
            "description": "reason is the CamelCase reason for the condition's current status.",
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "description": "status of the condition, one of True, False, Unknown.",
            "type": "string",
            "default": ""
          },
          "type": {
            "description": "type specifies the aspect reported by this condition.",
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "desired": {
      "description": "Release represents an OpenShift release image and associated metadata.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "version",
        "image"
      ],
      "properties": {
        "channels": {
          "description": "channels is the set of Cincinnati channels to which the release currently belongs.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "image": {
          "description": "image is a container image location that contains the update. When this field is part of spec, image is optional if version is specified and the availableUpdates field contains a matching version.",
          "type": "string",
          "default": ""
        },
        "url": {
          "description": "url contains information about this release. This URL is set by the 'url' metadata property on a release or the metadata returned by the update API and should be displayed as a link in user interfaces. The URL field may not be set for test or nightly releases.",
          "type": [
            "string",
            "null"
          ]
        },
        "version": {
          "description": "version is a semantic versioning identifying the update version. When this field is part of spec, version is optional if image is specified.",
          "type": "string",
          "default": ""
        }
      }
    },
    "history": {
      "description": "history contains a list of the most recent versions applied to the cluster. This value may be empty during cluster startup, and then will be updated when a new update is being applied. The newest update is first in the list and it is ordered by recency. Updates in the history have state Completed if the rollout completed - if an update was failing or halfway applied the state will be Partial. Only a limited amount of update history is preserved.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "UpdateHistory is a single attempted update to the cluster.",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "state",
          "startedTime",
          "completionTime",
          "image",
          "verified"
        ],
        "properties": {
          "acceptedRisks": {
            "description": "acceptedRisks records risks which were accepted to initiate the update. For example, it may menition an Upgradeable=False or missing signature that was overriden via desiredUpdate.force, or an update that was initiated despite not being in the availableUpdates set of recommended update targets.",
            "type": [
              "string",
              "null"
            ]
          },
          "completionTime": {
            "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "description": "image is a container image location that contains the update. This value is always populated.",
            "type": "string",
            "default": ""
          },
          "startedTime": {
            "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "description": "state reflects whether the update was fully applied. The Partial state indicates the update is not fully applied, while the Completed state indicates the update was successfully rolled out at least once (all parts of the update successfully applied).",
            "type": "string",
            "default": ""
          },
          "verified": {
            "description": "verified indicates whether the provided update was properly verified before it was installed. If this is false the cluster may not be trusted. Verified does not cover upgradeable checks that depend on the cluster state at the time when the update target was accepted.",
            "type": "boolean",
            "default": false
          },
          "version": {
            "description": "version is a semantic versioning identifying the update version. If the requested image does not define a version, or if a failure occurs retrieving the image, this value may be empty.",
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        }
      }
    },
    "observedGeneration": {
      "description": "observedGeneration reports which version of the spec is being synced. If this value is not equal to metadata.generation, then the desired and conditions fields may represent a previous version.",
      "type": [
        "integer",
        "null"
      ],
      "format": "int64",
      "default": 0
    },
    "versionHash": {
      "description": "versionHash is a fingerprint of the content that the cluster will be updated with. It is used by the operator to avoid unnecessary work and is for internal use only.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    }
  },
  "$schema": "http://json-schema.org/schema#"
}