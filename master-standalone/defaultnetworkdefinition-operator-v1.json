{
  "description": "DefaultNetworkDefinition represents a single network plugin's configuration. type must be specified, along with exactly one \"Config\" that matches the type.",
  "type": "object",
  "required": [
    "type"
  ],
  "properties": {
    "kuryrConfig": {
      "description": "KuryrConfig configures the Kuryr-Kubernetes SDN",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "controllerProbesPort": {
          "description": "The port kuryr-controller will listen for readiness and liveness requests.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "daemonProbesPort": {
          "description": "The port kuryr-daemon will listen for readiness and liveness requests.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "enablePortPoolsPrepopulation": {
          "description": "enablePortPoolsPrepopulation when true will make Kuryr prepopulate each newly created port pool with a minimum number of ports. Kuryr uses Neutron port pooling to fight the fact that it takes a significant amount of time to create one. It creates a number of ports when the first pod that is configured to use the dedicated network for pods is created in a namespace, and keeps them ready to be attached to pods. Port prepopulation is disabled by default.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "mtu": {
          "description": "mtu is the MTU that Kuryr should use when creating pod networks in Neutron. The value has to be lower or equal to the MTU of the nodes network and Neutron has to allow creation of tenant networks with such MTU. If unset Pod networks will be created with the same MTU as the nodes network has.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "openStackServiceNetwork": {
          "description": "openStackServiceNetwork contains the CIDR of network from which to allocate IPs for OpenStack Octavia's Amphora VMs. Please note that with Amphora driver Octavia uses two IPs from that network for each loadbalancer - one given by OpenShift and second for VRRP connections. As the first one is managed by OpenShift's and second by Neutron's IPAMs, those need to come from different pools. Therefore `openStackServiceNetwork` needs to be at least twice the size of `serviceNetwork`, and whole `serviceNetwork` must be overlapping with `openStackServiceNetwork`. cluster-network-operator will then make sure VRRP IPs are taken from the ranges inside `openStackServiceNetwork` that are not overlapping with `serviceNetwork`, effectivly preventing conflicts. If not set cluster-network-operator will use `serviceNetwork` expanded by decrementing the prefix size by 1.",
          "type": [
            "string",
            "null"
          ]
        },
        "poolBatchPorts": {
          "description": "poolBatchPorts sets a number of ports that should be created in a single batch request to extend the port pool. The default is 3. For more information about port pools see enablePortPoolsPrepopulation setting.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "poolMaxPorts": {
          "description": "poolMaxPorts sets a maximum number of free ports that are being kept in a port pool. If the number of ports exceeds this setting, free ports will get deleted. Setting 0 will disable this upper bound, effectively preventing pools from shrinking and this is the default value. For more information about port pools see enablePortPoolsPrepopulation setting.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "poolMinPorts": {
          "description": "poolMinPorts sets a minimum number of free ports that should be kept in a port pool. If the number of ports is lower than this setting, new ports will get created and added to pool. The default is 1. For more information about port pools see enablePortPoolsPrepopulation setting.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        }
      }
    },
    "openshiftSDNConfig": {
      "description": "OpenShiftSDNConfig configures the three openshift-sdn plugins",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "mode"
      ],
      "properties": {
        "enableUnidling": {
          "description": "enableUnidling controls whether or not the service proxy will support idling and unidling of services. By default, unidling is enabled.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "mode": {
          "description": "mode is one of \"Multitenant\", \"Subnet\", or \"NetworkPolicy\"",
          "type": "string",
          "default": ""
        },
        "mtu": {
          "description": "mtu is the mtu to use for the tunnel interface. Defaults to 1450 if unset. This must be 50 bytes smaller than the machine's uplink.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "useExternalOpenvswitch": {
          "description": "useExternalOpenvswitch used to control whether the operator would deploy an OVS DaemonSet itself or expect someone else to start OVS. As of 4.6, OVS is always run as a system service, and this flag is ignored. DEPRECATED: non-functional as of 4.6",
          "type": [
            "boolean",
            "null"
          ]
        },
        "vxlanPort": {
          "description": "vxlanPort is the port to use for all vxlan packets. The default is 4789.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        }
      }
    },
    "ovnKubernetesConfig": {
      "description": "ovnKubernetesConfig contains the configuration parameters for networks using the ovn-kubernetes network project",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "egressIPConfig": {
          "description": "EgressIPConfig defines the configuration knobs for egressip",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "reachabilityTotalTimeoutSeconds": {
              "description": "reachabilityTotalTimeout configures the EgressIP node reachability check total timeout in seconds. If the EgressIP node cannot be reached within this timeout, the node is declared down. Setting a large value may cause the EgressIP feature to react slowly to node changes. In particular, it may react slowly for EgressIP nodes that really have a genuine problem and are unreachable. When omitted, this means the user has no opinion and the platform is left to choose a reasonable default, which is subject to change over time. The current default is 1 second. A value of 0 disables the EgressIP node's reachability check.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            }
          }
        },
        "gatewayConfig": {
          "description": "GatewayConfig holds node gateway-related parsed config file parameters and command-line overrides",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "routingViaHost": {
              "description": "RoutingViaHost allows pod egress traffic to exit via the ovn-k8s-mp0 management port into the host before sending it out. If this is not set, traffic will always egress directly from OVN to outside without touching the host stack. Setting this to true means hardware offload will not be supported. Default is false if GatewayConfig is specified.",
              "type": [
                "boolean",
                "null"
              ]
            }
          }
        },
        "genevePort": {
          "description": "geneve port is the UDP port to be used by geneve encapulation. Default is 6081",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "hybridOverlayConfig": {
          "type": [
            "object",
            "null"
          ],
          "required": [
            "hybridClusterNetwork"
          ],
          "properties": {
            "hybridClusterNetwork": {
              "description": "HybridClusterNetwork defines a network space given to nodes on an additional overlay network.",
              "type": "array",
              "items": {
                "description": "ClusterNetworkEntry is a subnet from which to allocate PodIPs. A network of size HostPrefix (in CIDR notation) will be allocated when nodes join the cluster. If the HostPrefix field is not used by the plugin, it can be left unset. Not all network providers support multiple ClusterNetworks",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "cidr"
                ],
                "properties": {
                  "cidr": {
                    "type": "string",
                    "default": ""
                  },
                  "hostPrefix": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  }
                }
              }
            },
            "hybridOverlayVXLANPort": {
              "description": "HybridOverlayVXLANPort defines the VXLAN port number to be used by the additional overlay network. Default is 4789",
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            }
          }
        },
        "ipsecConfig": {
          "type": [
            "object",
            "null"
          ]
        },
        "mtu": {
          "description": "mtu is the MTU to use for the tunnel interface. This must be 100 bytes smaller than the uplink mtu. Default is 1400",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "policyAuditConfig": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "destination": {
              "description": "destination is the location for policy log messages. Regardless of this config, persistent logs will always be dumped to the host at /var/log/ovn/ however Additionally syslog output may be configured as follows. Valid values are: - \"libc\" -> to use the libc syslog() function of the host node's journdald process - \"udp:host:port\" -> for sending syslog over UDP - \"unix:file\" -> for using the UNIX domain socket directly - \"null\" -> to discard all messages logged to syslog The default is \"null\"",
              "type": [
                "string",
                "null"
              ]
            },
            "maxFileSize": {
              "description": "maxFilesSize is the max size an ACL_audit log file is allowed to reach before rotation occurs Units are in MB and the Default is 50MB",
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            },
            "rateLimit": {
              "description": "rateLimit is the approximate maximum number of messages to generate per-second per-node. If unset the default of 20 msg/sec is used.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            },
            "syslogFacility": {
              "description": "syslogFacility the RFC5424 facility for generated messages, e.g. \"kern\". Default is \"local0\"",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "v4InternalSubnet": {
          "description": "v4InternalSubnet is a v4 subnet used internally by ovn-kubernetes in case the default one is being already used by something else. It must not overlap with any other subnet being used by OpenShift or by the node network. The size of the subnet must be larger than the number of nodes. The value cannot be changed after installation. Default is 100.64.0.0/16",
          "type": [
            "string",
            "null"
          ]
        },
        "v6InternalSubnet": {
          "description": "v6InternalSubnet is a v6 subnet used internally by ovn-kubernetes in case the default one is being already used by something else. It must not overlap with any other subnet being used by OpenShift or by the node network. The size of the subnet must be larger than the number of nodes. The value cannot be changed after installation. Default is fd98::/48",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "type": {
      "description": "type is the type of network All NetworkTypes are supported except for NetworkTypeRaw",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    }
  },
  "$schema": "http://json-schema.org/schema#"
}