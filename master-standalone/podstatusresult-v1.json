{
  "description": "PodStatusResult is a wrapper for PodStatus returned by kubelet that can be encode/decoded",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ]
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": [
            "string",
            "null"
          ]
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ],
            "default": ""
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsType": {
                "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": [
                  "object",
                  "null"
                ]
              },
              "manager": {
                "description": "Manager is an identifier of the workflow managing these fields.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "operation": {
                "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "subresource": {
                "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            }
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": [
            "string",
            "null"
          ]
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": [
            "string",
            "null"
          ]
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "apiVersion",
              "kind",
              "name",
              "uid"
            ],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string",
                "default": ""
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string",
                "default": ""
              },
              "name": {
                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": "string",
                "default": ""
              },
              "uid": {
                "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": "string",
                "default": ""
              }
            },
            "x-kubernetes-map-type": "atomic"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": [
            "string",
            "null"
          ]
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "status": {
      "description": "PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "PodCondition contains details for the current condition of this pod.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "type",
              "status"
            ],
            "properties": {
              "lastProbeTime": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "lastTransitionTime": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                "type": "string",
                "default": ""
              },
              "type": {
                "description": "Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                "type": "string",
                "default": ""
              }
            }
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "containerStatuses": {
          "description": "The list has one entry per container in the manifest. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ContainerStatus contains details for the current status of this container.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "ready",
              "restartCount",
              "image",
              "imageID"
            ],
            "properties": {
              "containerID": {
                "description": "Container's ID in the format '<type>://<container_id>'.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "image": {
                "description": "The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images.",
                "type": "string",
                "default": ""
              },
              "imageID": {
                "description": "ImageID of the container's image.",
                "type": "string",
                "default": ""
              },
              "lastState": {
                "description": "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "running": {
                    "description": "ContainerStateRunning is a running state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "startedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      }
                    }
                  },
                  "terminated": {
                    "description": "ContainerStateTerminated is a terminated state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "exitCode"
                    ],
                    "properties": {
                      "containerID": {
                        "description": "Container's ID in the format '<type>://<container_id>'",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "exitCode": {
                        "description": "Exit status from the last termination of the container",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                      },
                      "finishedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "message": {
                        "description": "Message regarding the last termination of the container",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reason": {
                        "description": "(brief) reason from the last termination of the container",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "signal": {
                        "description": "Signal from the last termination of the container",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "startedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      }
                    }
                  },
                  "waiting": {
                    "description": "ContainerStateWaiting is a waiting state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "message": {
                        "description": "Message regarding why the container is not yet running.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reason": {
                        "description": "(brief) reason the container is not yet running.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              "name": {
                "description": "This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.",
                "type": "string",
                "default": ""
              },
              "ready": {
                "description": "Specifies whether the container has passed its readiness probe.",
                "type": "boolean",
                "default": false
              },
              "restartCount": {
                "description": "The number of times the container has been restarted.",
                "type": "integer",
                "format": "int32",
                "default": 0
              },
              "started": {
                "description": "Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "state": {
                "description": "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "running": {
                    "description": "ContainerStateRunning is a running state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "startedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      }
                    }
                  },
                  "terminated": {
                    "description": "ContainerStateTerminated is a terminated state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "exitCode"
                    ],
                    "properties": {
                      "containerID": {
                        "description": "Container's ID in the format '<type>://<container_id>'",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "exitCode": {
                        "description": "Exit status from the last termination of the container",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                      },
                      "finishedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "message": {
                        "description": "Message regarding the last termination of the container",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reason": {
                        "description": "(brief) reason from the last termination of the container",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "signal": {
                        "description": "Signal from the last termination of the container",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "startedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      }
                    }
                  },
                  "waiting": {
                    "description": "ContainerStateWaiting is a waiting state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "message": {
                        "description": "Message regarding why the container is not yet running.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reason": {
                        "description": "(brief) reason the container is not yet running.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "ephemeralContainerStatuses": {
          "description": "Status for any ephemeral containers that have run in this pod.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ContainerStatus contains details for the current status of this container.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "ready",
              "restartCount",
              "image",
              "imageID"
            ],
            "properties": {
              "containerID": {
                "description": "Container's ID in the format '<type>://<container_id>'.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "image": {
                "description": "The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images.",
                "type": "string",
                "default": ""
              },
              "imageID": {
                "description": "ImageID of the container's image.",
                "type": "string",
                "default": ""
              },
              "lastState": {
                "description": "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "running": {
                    "description": "ContainerStateRunning is a running state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "startedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      }
                    }
                  },
                  "terminated": {
                    "description": "ContainerStateTerminated is a terminated state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "exitCode"
                    ],
                    "properties": {
                      "containerID": {
                        "description": "Container's ID in the format '<type>://<container_id>'",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "exitCode": {
                        "description": "Exit status from the last termination of the container",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                      },
                      "finishedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "message": {
                        "description": "Message regarding the last termination of the container",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reason": {
                        "description": "(brief) reason from the last termination of the container",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "signal": {
                        "description": "Signal from the last termination of the container",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "startedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      }
                    }
                  },
                  "waiting": {
                    "description": "ContainerStateWaiting is a waiting state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "message": {
                        "description": "Message regarding why the container is not yet running.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reason": {
                        "description": "(brief) reason the container is not yet running.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              "name": {
                "description": "This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.",
                "type": "string",
                "default": ""
              },
              "ready": {
                "description": "Specifies whether the container has passed its readiness probe.",
                "type": "boolean",
                "default": false
              },
              "restartCount": {
                "description": "The number of times the container has been restarted.",
                "type": "integer",
                "format": "int32",
                "default": 0
              },
              "started": {
                "description": "Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "state": {
                "description": "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "running": {
                    "description": "ContainerStateRunning is a running state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "startedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      }
                    }
                  },
                  "terminated": {
                    "description": "ContainerStateTerminated is a terminated state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "exitCode"
                    ],
                    "properties": {
                      "containerID": {
                        "description": "Container's ID in the format '<type>://<container_id>'",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "exitCode": {
                        "description": "Exit status from the last termination of the container",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                      },
                      "finishedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "message": {
                        "description": "Message regarding the last termination of the container",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reason": {
                        "description": "(brief) reason from the last termination of the container",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "signal": {
                        "description": "Signal from the last termination of the container",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "startedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      }
                    }
                  },
                  "waiting": {
                    "description": "ContainerStateWaiting is a waiting state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "message": {
                        "description": "Message regarding why the container is not yet running.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reason": {
                        "description": "(brief) reason the container is not yet running.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "hostIP": {
          "description": "IP address of the host to which the pod is assigned. Empty if not yet scheduled.",
          "type": [
            "string",
            "null"
          ]
        },
        "initContainerStatuses": {
          "description": "The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ContainerStatus contains details for the current status of this container.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "ready",
              "restartCount",
              "image",
              "imageID"
            ],
            "properties": {
              "containerID": {
                "description": "Container's ID in the format '<type>://<container_id>'.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "image": {
                "description": "The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images.",
                "type": "string",
                "default": ""
              },
              "imageID": {
                "description": "ImageID of the container's image.",
                "type": "string",
                "default": ""
              },
              "lastState": {
                "description": "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "running": {
                    "description": "ContainerStateRunning is a running state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "startedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      }
                    }
                  },
                  "terminated": {
                    "description": "ContainerStateTerminated is a terminated state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "exitCode"
                    ],
                    "properties": {
                      "containerID": {
                        "description": "Container's ID in the format '<type>://<container_id>'",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "exitCode": {
                        "description": "Exit status from the last termination of the container",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                      },
                      "finishedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "message": {
                        "description": "Message regarding the last termination of the container",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reason": {
                        "description": "(brief) reason from the last termination of the container",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "signal": {
                        "description": "Signal from the last termination of the container",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "startedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      }
                    }
                  },
                  "waiting": {
                    "description": "ContainerStateWaiting is a waiting state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "message": {
                        "description": "Message regarding why the container is not yet running.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reason": {
                        "description": "(brief) reason the container is not yet running.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              "name": {
                "description": "This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.",
                "type": "string",
                "default": ""
              },
              "ready": {
                "description": "Specifies whether the container has passed its readiness probe.",
                "type": "boolean",
                "default": false
              },
              "restartCount": {
                "description": "The number of times the container has been restarted.",
                "type": "integer",
                "format": "int32",
                "default": 0
              },
              "started": {
                "description": "Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "state": {
                "description": "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "running": {
                    "description": "ContainerStateRunning is a running state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "startedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      }
                    }
                  },
                  "terminated": {
                    "description": "ContainerStateTerminated is a terminated state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "exitCode"
                    ],
                    "properties": {
                      "containerID": {
                        "description": "Container's ID in the format '<type>://<container_id>'",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "exitCode": {
                        "description": "Exit status from the last termination of the container",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                      },
                      "finishedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "message": {
                        "description": "Message regarding the last termination of the container",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reason": {
                        "description": "(brief) reason from the last termination of the container",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "signal": {
                        "description": "Signal from the last termination of the container",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "startedAt": {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      }
                    }
                  },
                  "waiting": {
                    "description": "ContainerStateWaiting is a waiting state of a container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "message": {
                        "description": "Message regarding why the container is not yet running.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reason": {
                        "description": "(brief) reason the container is not yet running.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "message": {
          "description": "A human readable message indicating details about why the pod is in this condition.",
          "type": [
            "string",
            "null"
          ]
        },
        "nominatedNodeName": {
          "description": "nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled.",
          "type": [
            "string",
            "null"
          ]
        },
        "phase": {
          "description": "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:\n\nPending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.\n\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase\n\nPossible enum values:\n - `\"Failed\"` means that all containers in the pod have terminated, and at least one container has terminated in a failure (exited with a non-zero exit code or was stopped by the system).\n - `\"Pending\"` means the pod has been accepted by the system, but one or more of the containers has not been started. This includes time before being bound to a node, as well as time spent pulling images onto the host.\n - `\"Running\"` means the pod has been bound to a node and all of the containers have been started. At least one container is still running or is in the process of being restarted.\n - `\"Succeeded\"` means that all containers in the pod have voluntarily terminated with a container exit code of 0, and the system is not going to restart any of these containers.\n - `\"Unknown\"` means that for some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod. Deprecated: It isn't being set since 2015 (74da3b14b0c0f658b3bb8d2def5094686d0e9095)",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "Failed",
            "Pending",
            "Running",
            "Succeeded",
            "Unknown"
          ]
        },
        "podIP": {
          "description": "IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.",
          "type": [
            "string",
            "null"
          ]
        },
        "podIPs": {
          "description": "podIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must match the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list is empty if no IPs have been allocated yet.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "IP address information for entries in the (plural) PodIPs field. Each entry includes:\n\n\tIP: An IP address allocated to the pod. Routable at least within the cluster.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "ip": {
                "description": "ip is an IP address (IPv4 or IPv6) assigned to the pod",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "x-kubernetes-patch-merge-key": "ip",
          "x-kubernetes-patch-strategy": "merge"
        },
        "qosClass": {
          "description": "The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md\n\nPossible enum values:\n - `\"BestEffort\"` is the BestEffort qos class.\n - `\"Burstable\"` is the Burstable qos class.\n - `\"Guaranteed\"` is the Guaranteed qos class.",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "BestEffort",
            "Burstable",
            "Guaranteed"
          ]
        },
        "reason": {
          "description": "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'",
          "type": [
            "string",
            "null"
          ]
        },
        "startTime": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        }
      }
    }
  },
  "$schema": "http://json-schema.org/schema#"
}